{
    "version": "https://jsonfeed.org/version/1",
    "title": "Amentiraz • All posts by \"题解\" tag",
    "description": "",
    "home_page_url": "http://Amentiraz.github.io",
    "items": [
        {
            "id": "http://amentiraz.github.io/2021/12/11/%E8%A5%BF%E7%94%B5%E6%96%B0%E7%94%9F%E8%B5%9B%E7%BD%91%E7%BB%9C%E8%B5%9B%E9%A2%98%E8%A7%A3/",
            "url": "http://amentiraz.github.io/2021/12/11/%E8%A5%BF%E7%94%B5%E6%96%B0%E7%94%9F%E8%B5%9B%E7%BD%91%E7%BB%9C%E8%B5%9B%E9%A2%98%E8%A7%A3/",
            "title": "西电新生赛网络赛题解",
            "date_published": "2021-12-11T02:19:40.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>\n    <div id=\"aplayer-wsvnKcTb\" class=\"aplayer aplayer-tag-marker meting-tag-marker\"\n         data-id=\"507001285\" data-server=\"netease\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"true\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"\n    ></div>\n<p>持续六天的新生赛终于落下了帷幕，打了 8 道题，第 21 名，对于两年没有碰过 oi 的我来说已经是一个不错的成绩了，如果运气好的话还能水到一等奖，怎么说都血赚。<br>\n但不得不说的是，我这次的状态比两年前打 CSPS 要好太多了，如果以我现在的心理素质和之前的知识水平去打，那肯定是不同的结果了。<br>\n这次比赛原本想用 Amentiraz 这个昵称去打，但思来想去还是用了最开始的 dsfly 昵称去打，一来这个名称短（够装 B），二来这个名称是我最开始打 oi 时的昵称，意味着一个新的开始吧。<br>\n说是六天，实际上就打了前三天，主要是还有本职的学习工作，第二是因为小说太好看了（笑）。还是把除了 J 题以外的所有题都摸了一遍，可以说除了 J 题我做不出来，其余的花时间都能做出来，放了 H 题和 K 题，H 题是因为纯模拟暴力，太恶心了，不想写，K 题是让你直接输出时间复杂度，搞了几下没出来，又不想去看资料，于是就放了。（留着时间看番不香吗）</p>\n<span id=\"more\"></span>\n<h3 id=\"t1位运算\"><a class=\"markdownIt-Anchor\" href=\"#t1位运算\">#</a> T1 位运算</h3>\n<p>题意：输入 a，b，输出 a&amp;b,a|b,a^b 的二进制表示<br>\n签到题，特判值为 0 的情况，没啥说的<br>\n代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;cstdio&gt;</span><br><span class=\"line\">#include&lt;cstring&gt;</span><br><span class=\"line\">#include&lt;iostream&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">using namespace std ;</span><br><span class=\"line\"></span><br><span class=\"line\">void deal ( int x ) &#123;</span><br><span class=\"line\">    if ( x == 0 ) &#123; cout &lt;&lt; &quot;0&quot; &lt;&lt; endl ; return ; &#125;</span><br><span class=\"line\">    int a[10000] , len = 1 ;</span><br><span class=\"line\">    while ( x ) &#123;</span><br><span class=\"line\">        a[len++] = x &amp; 1 ; x &gt;&gt;= 1 ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for ( int i = len - 1 ; i &gt;= 1 ; i -- ) cout &lt;&lt; a[i] ;</span><br><span class=\"line\">    cout &lt;&lt; endl ; return ;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main ( ) &#123;</span><br><span class=\"line\">    int a , b ; scanf ( &quot;%d%d&quot; , &amp; a , &amp; b ) ;</span><br><span class=\"line\">    int ans1 = a &amp; b , ans2 = a | b , ans3 = a ^ b ;</span><br><span class=\"line\">    deal ( ans1 ) ; deal ( ans2 ) ; deal ( ans3 ) ;</span><br><span class=\"line\">    return 0 ;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"t21931\"><a class=\"markdownIt-Anchor\" href=\"#t21931\">#</a> T21931</h3>\n<p>题面：<br>\n<img data-src=\"https://tva1.sinaimg.cn/large/008i3skNly1gx9p89fa2vj30wl0fz7az.jpg\" alt=\"\"><br>\n歌颂我们伟大的母校 90 周年的题目。<br>\n一眼看不出来，先打表枚举找规律。大胆猜想最佳情况是把每一张劵平摊开，尽可能的覆盖到每一次买套餐，小心求证列几个数学公式就出来了，这题不难。关键是你要眼尖的看出如果不买饭那么就不花钱。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;cstdio&gt;</span><br><span class=\"line\">#include&lt;cmath&gt;</span><br><span class=\"line\">#include&lt;cstring&gt;</span><br><span class=\"line\">#include&lt;iostream&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">using namespace std ;</span><br><span class=\"line\"></span><br><span class=\"line\">int main ( ) &#123;</span><br><span class=\"line\">    int T ; scanf ( &quot;%d&quot; , &amp; T ) ;</span><br><span class=\"line\">    while ( T -- ) &#123;</span><br><span class=\"line\">        int n , m ; scanf ( &quot;%d%d&quot; , &amp; n , &amp; m ) ;</span><br><span class=\"line\">        int a[1000] , tot = 0 ;</span><br><span class=\"line\">        for ( int i = 1 ; i &lt;= n ; i ++ ) scanf ( &quot;%d&quot; , &amp; a[i] ) , tot += a[i] ;</span><br><span class=\"line\">        if ( m &gt; n ) &#123;</span><br><span class=\"line\">            cout &lt;&lt; tot * 2 * ( m - n ) + tot * n - tot &lt;&lt; endl ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if ( m == 0 ) cout &lt;&lt; &quot;0&quot; &lt;&lt; endl ;</span><br><span class=\"line\">        else cout &lt;&lt; m * tot - tot &lt;&lt; endl ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 0 ;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"t3等级展示\"><a class=\"markdownIt-Anchor\" href=\"#t3等级展示\">#</a> T3 等级展示</h3>\n<p>题意：<br>\n类比于 qq 的等级，对应星星、月亮、太阳、皇冠有 *,(,0,W 给出等级，输出图标<br>\n签到题，简单的一批，直接上代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;cstdio&gt;</span><br><span class=\"line\">#include&lt;cstring&gt;</span><br><span class=\"line\">#include&lt;cmath&gt;</span><br><span class=\"line\">#include&lt;iostream&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">using namespace std ; </span><br><span class=\"line\"></span><br><span class=\"line\">int main ( ) &#123;</span><br><span class=\"line\">    int n ; scanf ( &quot;%d&quot; , &amp; n ) ; </span><br><span class=\"line\">    for ( int i = 1 ; i &lt;= n / 64 ; i ++ ) cout &lt;&lt; &quot;W&quot; ; n %= 64 ; </span><br><span class=\"line\">    for ( int i = 1 ; i &lt;= n / 16 ; i ++ ) cout &lt;&lt; &quot;O&quot; ; n %= 16 ; </span><br><span class=\"line\">    for ( int i = 1 ; i &lt;= n / 4 ; i ++ ) cout &lt;&lt; &quot;(&quot; ; n %= 4 ; </span><br><span class=\"line\">    for ( int i = 1 ; i &lt;= n ; i ++ ) cout &lt;&lt; &quot;*&quot; ; </span><br><span class=\"line\">    return 0 ; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"t4边权之和\"><a class=\"markdownIt-Anchor\" href=\"#t4边权之和\">#</a> T4 边权之和</h3>\n<p>题意：n 个点的无向完全图，对于每个点有点权 ai，对于两个点 i，j 的边权为 | ai-aj|，统计边权之和对于 998244353 取模值<br>\n考虑把绝对值去掉，先把数组给排序，计算它们的和，如何整体计算即可，也不难。<br>\n至此，新生赛所有的送分题以及送完了，后面的题或多或少都有些难度，这四道题基本上是所有接触过 c 的人都能写出来的，只是快慢罢了。<br>\n我新生赛来迟了 30min，我写到这道题时排位 30 多名，后面排名基本上是只升不降，说明大部分人开始卡住了。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;cstdio&gt;</span><br><span class=\"line\">#include&lt;cstring&gt;</span><br><span class=\"line\">#include&lt;iostream&gt;</span><br><span class=\"line\">#include&lt;algorithm&gt;</span><br><span class=\"line\">#include&lt;cmath&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">using namespace std ; </span><br><span class=\"line\">const long long mod = 998244353 ;</span><br><span class=\"line\">long long a[1000006] ;</span><br><span class=\"line\"></span><br><span class=\"line\">bool cmp ( int x , int y ) &#123; return x &gt; y ; &#125;  </span><br><span class=\"line\"></span><br><span class=\"line\">int main ( ) &#123;</span><br><span class=\"line\">    int n ; long long ans = 0 , tot = 0 ; scanf ( &quot;%d&quot; , &amp; n ) ;</span><br><span class=\"line\">    for ( int i = 1 ; i &lt;= n ; i ++ ) &#123;</span><br><span class=\"line\">        scanf ( &quot;%lld&quot; , &amp; a[i] ) ;</span><br><span class=\"line\">        tot += a[i] ; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sort ( a + 1 , a + 1 + n , cmp ) ; </span><br><span class=\"line\">    for ( int i = 1 ; i &lt;= n ; i ++ ) &#123;</span><br><span class=\"line\">        tot -= a[i] ; </span><br><span class=\"line\">        ans += ( ( long long ) ( n - i ) ) * a[i] - tot ;</span><br><span class=\"line\">        ans %= mod ; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; ans ; </span><br><span class=\"line\">    return 0 ; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"t5tsy的轻音梦\"><a class=\"markdownIt-Anchor\" href=\"#t5tsy的轻音梦\">#</a> T5tsy 的轻音梦</h3>\n<p>（没想到在这都能见到轻音厨，但可惜的是这个轻音厨太坑了）<br>\n题面：<br>\n<img data-src=\"https://tva1.sinaimg.cn/large/008i3skNly1gx9ppizm8sj30wt09btag.jpg\" alt=\"\"><br>\n请大家先看看那位交了 48 次都没过的大佬：<br>\n<img data-src=\"https://tva1.sinaimg.cn/large/008i3skNly1gx9pqbexghj30nh0hiajq.jpg\" alt=\"\"><br>\n怎么说呢，从第一天开始我就仰望大佬的英姿，虽然最后大佬跟我 A 的题是一个数，但就凭这道题我就不得不佩服他。我一度怀疑他在整活，但看到他在比赛终都没有 A 掉这题，不由得对他产生崇高的敬意。<br>\n我开始也被绕进去了，很明显，我们可以联想到幻方，幻方似乎是斜着放，中间是最中间的数，然后呈现一定规律依次放入数，但是我们怎么类比推理都无法得出正确的解法，特别是输出 - 1 给我了很大的迷惑，是不是要考虑奇数次项的奇偶关系？是不是对称放？等等，然而这些都是放屁。想出来正解后我觉得自己是个傻逼。<br>\n正解：对于奇数次项考虑对角线为分隔除了正中间的一定为偶其余的依次按从大到小的顺序从对角线依次填入，保证左边是偶右边是奇就行。<br>\n对于偶数次项直接依次填入即可<br>\n（ls 的轻音梦碎了）<br>\n代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;iostream&gt;</span><br><span class=\"line\">#include&lt;cstdio&gt;</span><br><span class=\"line\">#include&lt;cstring&gt;</span><br><span class=\"line\">#include&lt;cmath&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">using namespace std ; </span><br><span class=\"line\"></span><br><span class=\"line\">int a[1005][1005] ; </span><br><span class=\"line\"></span><br><span class=\"line\">int main ( ) &#123;</span><br><span class=\"line\">\tint n ; scanf ( &quot;%d&quot; , &amp; n ) ; </span><br><span class=\"line\">\tif ( n % 2 == 0 ) &#123;</span><br><span class=\"line\">\t\tfor ( int i = 1 ; i &lt;= n * n ; i ++ ) &#123;</span><br><span class=\"line\">\t\t\tcout &lt;&lt; i &lt;&lt; &quot; &quot; ; </span><br><span class=\"line\">\t\t\tif ( i % n == 0 ) cout &lt;&lt; endl ; </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\telse if ( n == 1 ) cout &lt;&lt; &quot;1&quot; ; </span><br><span class=\"line\">\telse &#123;</span><br><span class=\"line\">\t\tfor ( int i = 1 ; i &lt;= n / 2 ; i ++ ) &#123;</span><br><span class=\"line\">\t\t\ta[i][i] = i * 2 ; </span><br><span class=\"line\">\t\t\ta[i][i+1] = i * 2 + 1 ; \t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\ta[1][3] = 1 ; </span><br><span class=\"line\">\t\ta[n/2+1][n/2] = n + 1 ; </span><br><span class=\"line\">\t\tfor ( int i = 1 ; i &lt;= n / 2 + 1 ; i ++ ) &#123;</span><br><span class=\"line\">\t\t\tint x = n / 2 + i , y = n / 2 + i ; </span><br><span class=\"line\">\t\t\ta[x][y] = n + 1 + i * 2 - 1 ; </span><br><span class=\"line\">\t\t\ta[x+1][y] = n + 1 + i * 2 ;\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tint cur1 = n + 1 + ( n / 2 + 1 ) * 2 + 1 ;</span><br><span class=\"line\">\t\tint cur2 = cur1 - 1 ;  </span><br><span class=\"line\">\t\tfor ( int i = 1 ; i &lt;= n ; i ++ ) &#123;</span><br><span class=\"line\">\t\t\tfor ( int j = 1 ; j &lt;= n ; j ++ ) &#123;</span><br><span class=\"line\">\t\t\t\tif ( ! a[i][j] ) &#123;</span><br><span class=\"line\">\t\t\t\t\tif ( i &gt; j ) a[i][j] = cur2 , cur2 += 2 ; </span><br><span class=\"line\">\t\t\t\t\tif ( j &gt; i ) a[i][j] = cur1 , cur1 += 2 ; \t</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tcout &lt;&lt; a[i][j] &lt;&lt; &quot; &quot; ; </span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tcout &lt;&lt; endl ; </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn 0 ; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"t6奇怪的排序\"><a class=\"markdownIt-Anchor\" href=\"#t6奇怪的排序\">#</a> T6 奇怪的排序</h3>\n<p>题意：<br>\n<img data-src=\"https://tva1.sinaimg.cn/large/008i3skNly1gx9q4jdkkwj30ge0d475c.jpg\" alt=\"\"><br>\n这题是很有意思的一道题，考察算法线段树和逆序对，只能说挺难想的吧，难度估计有提高组 D2T1 的难度。<br>\n我们发现这个神奇的算法是把每个最大的数抬到第 i 个位置上并对前 i 个数排序，第 i+1 个数按照大小顺序交换到自己的位置上，交换的次数为这个数不重复的逆序对。<br>\n本身分析到这里我以为套个逆序对就完了，结果发现是不重复的，然后我就弄了一个小暴力，把这些重复的数强制给删掉，结果时间复杂度为 O (n^2*logn) 比他原来的还大，emmm。<br>\n对于常见的求逆序对的方法归并和树状数组我都不是很熟悉，于是我就用最无脑的线段树去做，依次判断这个数是否读入过然后决定是否加入到逆序对的计算，最后加起来就行。时间复杂度为 O (nlogn)<br>\n 代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;cstdio&gt;</span><br><span class=\"line\">#include&lt;cstring&gt;</span><br><span class=\"line\">#include&lt;cmath&gt;</span><br><span class=\"line\">#include&lt;iostream&gt;</span><br><span class=\"line\">#include&lt;algorithm&gt;</span><br><span class=\"line\">#include&lt;queue&gt;</span><br><span class=\"line\">#include&lt;vector&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">using namespace std ;</span><br><span class=\"line\">typedef long long LL ;</span><br><span class=\"line\">const int maxn = 200005 ;</span><br><span class=\"line\">struct L &#123;</span><br><span class=\"line\">    int val , add ;</span><br><span class=\"line\">&#125; t[maxn&lt;&lt;2] ;</span><br><span class=\"line\">int n , m ; LL sum = 0 ;</span><br><span class=\"line\">struct M &#123;</span><br><span class=\"line\">    int val , id ;</span><br><span class=\"line\">&#125; a[maxn] ;</span><br><span class=\"line\">int vis[maxn] , arank[maxn] ;</span><br><span class=\"line\"></span><br><span class=\"line\">bool cmp ( M x , M y ) &#123;</span><br><span class=\"line\">    if ( x.val == y.val ) return x.id &lt; y.id ;</span><br><span class=\"line\">    return x.val &lt; y.val ;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void spread ( int p , int l , int r ) &#123;</span><br><span class=\"line\">    if ( t[p].add ) &#123;</span><br><span class=\"line\">        int mid = ( l + r ) &gt;&gt; 1 ;</span><br><span class=\"line\">        t[p&lt;&lt;1].val = ( t[p&lt;&lt;1].val + t[p].add * ( mid - l + 1 ) ) , t[p&lt;&lt;1].add += t[p].add ;</span><br><span class=\"line\">        t[p&lt;&lt;1|1].val = ( t[p&lt;&lt;1|1].val + t[p].add * ( r - mid ) ) , t[p&lt;&lt;1|1].add += t[p].add ;</span><br><span class=\"line\">        t[p].add = 0 ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void change ( int p , int l , int r , int x , int y , int z ) &#123;</span><br><span class=\"line\">   if ( x &lt;= l &amp;&amp; r &lt;= y ) &#123; t[p].val += z * ( r - l + 1 ) ; t[p].add += z ; return ; &#125;</span><br><span class=\"line\">   int mid = ( l + r ) &gt;&gt; 1 ; spread ( p , l , r ) ;</span><br><span class=\"line\">   if ( x &lt;= mid ) change ( p &lt;&lt; 1 , l , mid , x , y , z ) ;</span><br><span class=\"line\">   if ( y &gt; mid ) change ( p &lt;&lt; 1 | 1 , mid + 1 , r , x , y , z ) ;</span><br><span class=\"line\">   t[p].val = t[p&lt;&lt;1].val + t[p&lt;&lt;1|1].val ;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int ask ( int p , int l , int r , int x , int y ) &#123;</span><br><span class=\"line\">    if ( x &lt;= l &amp;&amp; r &lt;= y ) &#123; return t[p].val ; &#125;</span><br><span class=\"line\">    int mid = ( l + r ) &gt;&gt; 1 ; spread ( p , l , r ) ; int ans = 0 ;</span><br><span class=\"line\">    if ( x &lt;= mid ) ans = ans + ask ( p &lt;&lt; 1 , l , mid , x , y ) ;</span><br><span class=\"line\">    if ( y &gt; mid ) ans = ans + ask ( p &lt;&lt; 1 | 1 , mid + 1 , r , x , y ) ;</span><br><span class=\"line\">    return ans ;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">int main ( ) &#123;</span><br><span class=\"line\">    scanf ( &quot;%d&quot; , &amp; n ) ; int maxn = 0 , site = 0 ;</span><br><span class=\"line\">    for ( int i = 1 ; i &lt;= n ; i ++ ) &#123;</span><br><span class=\"line\">        scanf ( &quot;%d&quot; , &amp; a[i].val ) ;</span><br><span class=\"line\">        if ( a[i].val &gt; maxn ) maxn = a[i].val , site = i ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for ( int i = 1 ; i &lt;= site ; i ++ ) &#123;</span><br><span class=\"line\">        if ( a[i].val &gt; a[1].val ) &#123;</span><br><span class=\"line\">            swap ( a[i].val , a[1].val ) ; sum += 1LL ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for ( int i = 1 ; i &lt;= n ; i ++ ) a[i].id = i ;</span><br><span class=\"line\">    sort ( a + 1 , a + 1 + n , cmp ) ;</span><br><span class=\"line\">    int cur = 2 ;</span><br><span class=\"line\">    for ( int i = 1 ; i &lt;= n ; i ++ ) &#123;</span><br><span class=\"line\">        if ( a[i].val == a[i-1].val ) cur -- ;</span><br><span class=\"line\">        arank[a[i].id] = cur ++ ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for ( int i = 1 ; i &lt;= n ; i ++ ) &#123;</span><br><span class=\"line\">        sum += ( LL ) ( ask ( 1 , 1 , n , arank[i] , arank[i] ) ) ;</span><br><span class=\"line\">        if ( vis[arank[i]] ) continue ;</span><br><span class=\"line\">        vis[arank[i]] ++ ;</span><br><span class=\"line\">        change ( 1 , 1 , n , 1 , arank[i] - 1 , 1 ) ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; sum ;</span><br><span class=\"line\">    return 0 ;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"t7更高更妙的字符游戏\"><a class=\"markdownIt-Anchor\" href=\"#t7更高更妙的字符游戏\">#</a> T7 更高更妙的字符游戏</h3>\n<p>题面：<br>\n<img data-src=\"https://tva1.sinaimg.cn/large/008i3skNly1gx9qg4e2lij30m607qjsl.jpg\" alt=\"\"><br>\n对于我来说，博弈论分为两种，一种是简单的，一种是做不出来的。<br>\n我在比赛中惊喜的发现居然有超过 5 个人做出来了这道题，我稍加思索，然后大胆假设，也没小心求证，直接交了然后就 A 了，www。<br>\n考虑两种必死的情况，也就是之差一个的和不差的，直接判断就行。对于其它情况，我们从上帝视角来看，如果是我发现下一步我可能会输，我们直接把那个字符删了就行，但是万一删了还是必死呢。我们假设有 abcabc 这种情况，我们肯定不可能删 b，删了就死，但我们可以删最边上的 a 和 c 啊，那么最终的赢家只由字符串的大小决定</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;iostream&gt;</span><br><span class=\"line\">#include&lt;cstdio&gt;</span><br><span class=\"line\">#include&lt;cstring&gt;</span><br><span class=\"line\">#include&lt;cmath&gt;</span><br><span class=\"line\">#include&lt;algorithm&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">using namespace std ; </span><br><span class=\"line\"></span><br><span class=\"line\">int main ( ) &#123;</span><br><span class=\"line\">    int T ; scanf ( &quot;%d&quot; , &amp; T ) ; </span><br><span class=\"line\">    int flag = 2 ; </span><br><span class=\"line\">    while ( T -- ) &#123;</span><br><span class=\"line\">        flag = 2 ; </span><br><span class=\"line\">        int n ; scanf ( &quot;%d&quot; , &amp; n ) ; </span><br><span class=\"line\">        char a[1000006] ; a[n+1] = 0 ; </span><br><span class=\"line\">        scanf ( &quot;%s&quot; , a + 1 ) ; </span><br><span class=\"line\">        for ( int i = 1 ; i &lt;= n - 1 ; i ++ ) &#123;</span><br><span class=\"line\">            if ( a[i] == a[i+1] ) flag = 0 ;</span><br><span class=\"line\">            if ( a[i] == a[i+2] &amp;&amp; i + 2 &lt;= n ) flag = min ( flag , 1 ) ; </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if ( flag == 0 ) cout &lt;&lt; &quot;pllj&quot; &lt;&lt; endl ; </span><br><span class=\"line\">        else if ( flag == 1 ) cout &lt;&lt; &quot;freesin&quot; &lt;&lt; endl ; </span><br><span class=\"line\">        else &#123;</span><br><span class=\"line\">            flag = n % 2 ; </span><br><span class=\"line\">            if ( flag == 0 ) cout &lt;&lt; &quot;pllj&quot; &lt;&lt; endl ;</span><br><span class=\"line\">            else if ( flag == 1 ) cout &lt;&lt; &quot;freesin&quot; &lt;&lt; endl ; </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 0 ; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"t8内存占用计算\"><a class=\"markdownIt-Anchor\" href=\"#t8内存占用计算\">#</a> T8 内存占用计算</h3>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008i3skNly1gx9qmm6ve0j30hu0i240c.jpg\" alt=\"\"><br>\n纯模拟，利用高精的思想去比较，乘法就先判断位数够不够如果正好就逐位比较，想了思路感觉很恶心没写代码，如果说错了还请谅解。</p>\n<h3 id=\"t9tsy的排序\"><a class=\"markdownIt-Anchor\" href=\"#t9tsy的排序\">#</a> T9tsy 的排序</h3>\n<p>题面：<br>\n<img data-src=\"https://tva1.sinaimg.cn/large/008i3skNly1gx9qpp37ttj30qg06z0u0.jpg\" alt=\"\"></p>\n<blockquote>\n<p>三年 oi 一场空，不开 long long 见祖宗</p>\n</blockquote>\n<p>每个数只出现一次，我们可以计算它们的逆序对，然后就可以算出它们的正序对等等数据，所以我们只需枚举中间两位，答案就是对于每个逆序对，求两个数左边比他们小的和右边比它们大的数的积。<br>\n但这个算法的复杂度还是 O (n^2)，我们把每个数从大到小丢入线段树中，把标号大于它本身的数都加上它的正序对的个数，强制强制把时间复杂度压缩到 O (nlogn)，再一次性乘起来就行。<br>\n注意一定要开 longlong</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std ; </span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">long</span> <span class=\"type\">long</span> LL ; </span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> maxn = <span class=\"number\">300005</span> ; </span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> mod = <span class=\"number\">35198030</span> ; </span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">L</span> &#123;</span><br><span class=\"line\">    LL add , val ;</span><br><span class=\"line\">&#125; t[maxn&lt;&lt;<span class=\"number\">2</span>] ; </span><br><span class=\"line\"><span class=\"type\">int</span> a[maxn] ;</span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">M</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> val , id ;</span><br><span class=\"line\">&#125; f[maxn] ; </span><br><span class=\"line\">LL g[maxn] ;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">spread</span> <span class=\"params\">( <span class=\"type\">int</span> p , <span class=\"type\">int</span> l , <span class=\"type\">int</span> r )</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( t[p].add ) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> mid = ( l + r ) &gt;&gt; <span class=\"number\">1</span> ; </span><br><span class=\"line\">        t[p&lt;&lt;<span class=\"number\">1</span>].val = ( t[p&lt;&lt;<span class=\"number\">1</span>].val + t[p].add * ( mid - l + <span class=\"number\">1</span> ) ) % mod , t[p&lt;&lt;<span class=\"number\">1</span>].add += t[p].add ; t[p&lt;&lt;<span class=\"number\">1</span>].add %= mod ;</span><br><span class=\"line\">        t[p&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>].val = ( t[p&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>].val + t[p].add * ( r - mid ) ) % mod , t[p&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>].add += t[p].add ; t[p&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>].add %= mod ;</span><br><span class=\"line\">        t[p].add = <span class=\"number\">0</span> ; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">change</span> <span class=\"params\">( <span class=\"type\">int</span> p , <span class=\"type\">int</span> l , <span class=\"type\">int</span> r , <span class=\"type\">int</span> x , <span class=\"type\">int</span> y , LL z )</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( x &lt;= l &amp;&amp; r &lt;= y ) &#123; t[p].val += z * ( r - l + <span class=\"number\">1</span> ) ; t[p].add += z ; t[p].val %= mod , t[p].add %= mod ; <span class=\"keyword\">return</span> ; &#125;</span><br><span class=\"line\">   <span class=\"type\">int</span> mid = ( l + r ) &gt;&gt; <span class=\"number\">1</span> ; <span class=\"built_in\">spread</span> ( p , l , r ) ; </span><br><span class=\"line\">   <span class=\"keyword\">if</span> ( x &lt;= mid ) <span class=\"built_in\">change</span> ( p &lt;&lt; <span class=\"number\">1</span> , l , mid , x , y , z ) ; </span><br><span class=\"line\">   <span class=\"keyword\">if</span> ( y &gt; mid ) <span class=\"built_in\">change</span> ( p &lt;&lt; <span class=\"number\">1</span> | <span class=\"number\">1</span> , mid + <span class=\"number\">1</span> , r , x , y , z ) ; </span><br><span class=\"line\">   t[p].val = ( t[p&lt;&lt;<span class=\"number\">1</span>].val + t[p&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>].val ) % mod ;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">LL <span class=\"title\">ask</span> <span class=\"params\">( <span class=\"type\">int</span> p , <span class=\"type\">int</span> l , <span class=\"type\">int</span> r , <span class=\"type\">int</span> x , <span class=\"type\">int</span> y )</span> </span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( x &lt;= l &amp;&amp; r &lt;= y ) &#123; <span class=\"keyword\">return</span> t[p].val % mod ; &#125; </span><br><span class=\"line\">    <span class=\"type\">int</span> mid = ( l + r ) &gt;&gt; <span class=\"number\">1</span> ; <span class=\"built_in\">spread</span> ( p , l , r ) ; LL ans = <span class=\"number\">0</span> ; </span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( x &lt;= mid ) ans = ( ans + <span class=\"built_in\">ask</span> ( p &lt;&lt; <span class=\"number\">1</span> , l , mid , x , y ) ) % mod ;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( y &gt; mid ) ans = ( ans + <span class=\"built_in\">ask</span> ( p &lt;&lt; <span class=\"number\">1</span> | <span class=\"number\">1</span> , mid + <span class=\"number\">1</span> , r , x , y ) ) % mod ;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans ; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span> <span class=\"params\">( )</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n ; <span class=\"built_in\">scanf</span> ( <span class=\"string\">&quot;%d&quot;</span> , &amp; n ) ; </span><br><span class=\"line\">    <span class=\"keyword\">for</span> ( <span class=\"type\">int</span> i = <span class=\"number\">1</span> ; i &lt;= n ; i ++ ) <span class=\"built_in\">scanf</span> ( <span class=\"string\">&quot;%d&quot;</span> , &amp; a[i] ) ; </span><br><span class=\"line\">    <span class=\"keyword\">for</span> ( <span class=\"type\">int</span> i = <span class=\"number\">1</span> ; i &lt;= n ; i ++ ) &#123;</span><br><span class=\"line\">        f[a[i]].val = <span class=\"built_in\">ask</span> ( <span class=\"number\">1</span> , <span class=\"number\">1</span> , n , a[i] , a[i] ) ; f[a[i]].id = i ; </span><br><span class=\"line\">        <span class=\"built_in\">change</span> ( <span class=\"number\">1</span> , <span class=\"number\">1</span> , n , a[i] , n , <span class=\"number\">1</span> ) ; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ( <span class=\"type\">int</span> i = <span class=\"number\">0</span> ; i &lt;= ( n &lt;&lt; <span class=\"number\">2</span> ) ; i ++ ) t[i].add = t[i].val = <span class=\"number\">0</span> ; </span><br><span class=\"line\">    <span class=\"keyword\">for</span> ( <span class=\"type\">int</span> i = n ; i &gt;= <span class=\"number\">1</span> ; i -- ) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> ind = f[i].id ; </span><br><span class=\"line\">        g[i] = ( <span class=\"built_in\">ask</span> ( <span class=\"number\">1</span> , <span class=\"number\">1</span> , n , ind , ind ) ) % mod ; </span><br><span class=\"line\">        <span class=\"built_in\">change</span> ( <span class=\"number\">1</span> , <span class=\"number\">1</span> , n , ind , n , f[i].val ) ; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    LL ans = <span class=\"number\">0</span> ; </span><br><span class=\"line\">    <span class=\"keyword\">for</span> ( <span class=\"type\">int</span> i = <span class=\"number\">1</span> ; i &lt;= n ; i ++ ) &#123;</span><br><span class=\"line\">        LL num = ( ( n - a[i] ) - ( i - f[a[i]].val - <span class=\"number\">1</span> ) ) % mod ;</span><br><span class=\"line\">        ans = ( ans + ( num * g[a[i]] ) ) % mod ; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; ans ; </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span> ; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"t10璀璨星空\"><a class=\"markdownIt-Anchor\" href=\"#t10璀璨星空\">#</a> T10 璀璨星空</h3>\n<p>题意：<br>\n<img data-src=\"https://tva1.sinaimg.cn/large/008i3skNly1gx9qz63046j30fy0fq3zm.jpg\" alt=\"\"><br>\n没去做，也没有想，全场也只有六个做出来了，后面如果它们发题解再补吧。（还得补高数欠下的）</p>\n<h3 id=\"t11复杂度理论初步\"><a class=\"markdownIt-Anchor\" href=\"#t11复杂度理论初步\">#</a> T11 复杂度理论初步</h3>\n<p>题意：<br>\n<img data-src=\"https://tva1.sinaimg.cn/large/008i3skNly1gx9r210kolj30g60g5q3j.jpg\" alt=\"\"><br>\n<img data-src=\"https://tva1.sinaimg.cn/large/008i3skNly1gx9r29droxj30hm0guaas.jpg\" alt=\"\"><br>\n<img data-src=\"https://tva1.sinaimg.cn/large/008i3skNly1gx9r2gd287j30gl0aeq35.jpg\" alt=\"\"><br>\n<img data-src=\"https://tva1.sinaimg.cn/large/008i3skNly1gx9r2nnny9j30fu0dnmxw.jpg\" alt=\"\"><br>\n提交了几次没对就没提交了。有几个结论还是可以记下来：对于 for 循环的时间复杂度就是最内层之积，对于递归就是递归的次数 * 每次递归的时间复杂度。同样的，有题解再做吧。</p>\n",
            "tags": [
                "题解"
            ]
        }
    ]
}