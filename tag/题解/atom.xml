<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://Amentiraz.github.io</id>
    <title>Amentiraz • Posts by &#34;题解&#34; tag</title>
    <link href="http://Amentiraz.github.io" />
    <updated>2021-12-11T02:19:40.000Z</updated>
    <category term="DP" />
    <category term="算法" />
    <category term="Dijkstra" />
    <category term="书评" />
    <category term="LCA" />
    <category term="代码" />
    <category term="分布式" />
    <category term="数学建模" />
    <category term="TOPSIS" />
    <category term="Matlab" />
    <category term="Tarjan" />
    <category term="学习笔记" />
    <category term="C语言" />
    <category term="复习资料" />
    <category term="python" />
    <category term="论文" />
    <category term="笔记" />
    <category term="生活" />
    <category term="读书笔记" />
    <category term="杂" />
    <category term="层次分析法" />
    <category term="诗" />
    <category term="指针" />
    <category term="c语言" />
    <category term="插值算法" />
    <category term="线段树" />
    <category term="结构" />
    <category term="题解" />
    <entry>
        <id>http://amentiraz.github.io/2021/12/11/%E8%A5%BF%E7%94%B5%E6%96%B0%E7%94%9F%E8%B5%9B%E7%BD%91%E7%BB%9C%E8%B5%9B%E9%A2%98%E8%A7%A3/</id>
        <title>西电新生赛网络赛题解</title>
        <link rel="alternate" href="http://amentiraz.github.io/2021/12/11/%E8%A5%BF%E7%94%B5%E6%96%B0%E7%94%9F%E8%B5%9B%E7%BD%91%E7%BB%9C%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
        <content type="html">&lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;script class=&#34;meting-secondary-script-marker&#34; src=&#34;\assets\js\Meting.min.js&#34;&gt;&lt;/script&gt;
    &lt;div id=&#34;aplayer-wsvnKcTb&#34; class=&#34;aplayer aplayer-tag-marker meting-tag-marker&#34;
         data-id=&#34;507001285&#34; data-server=&#34;netease&#34; data-type=&#34;song&#34; data-mode=&#34;circulation&#34; data-autoplay=&#34;true&#34; data-mutex=&#34;true&#34; data-listmaxheight=&#34;340px&#34; data-preload=&#34;none&#34; data-theme=&#34;#ad7a86&#34;
    &gt;&lt;/div&gt;
&lt;p&gt;持续六天的新生赛终于落下了帷幕，打了 8 道题，第 21 名，对于两年没有碰过 oi 的我来说已经是一个不错的成绩了，如果运气好的话还能水到一等奖，怎么说都血赚。&lt;br&gt;
但不得不说的是，我这次的状态比两年前打 CSPS 要好太多了，如果以我现在的心理素质和之前的知识水平去打，那肯定是不同的结果了。&lt;br&gt;
这次比赛原本想用 Amentiraz 这个昵称去打，但思来想去还是用了最开始的 dsfly 昵称去打，一来这个名称短（够装 B），二来这个名称是我最开始打 oi 时的昵称，意味着一个新的开始吧。&lt;br&gt;
说是六天，实际上就打了前三天，主要是还有本职的学习工作，第二是因为小说太好看了（笑）。还是把除了 J 题以外的所有题都摸了一遍，可以说除了 J 题我做不出来，其余的花时间都能做出来，放了 H 题和 K 题，H 题是因为纯模拟暴力，太恶心了，不想写，K 题是让你直接输出时间复杂度，搞了几下没出来，又不想去看资料，于是就放了。（留着时间看番不香吗）&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h3 id=&#34;t1位运算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#t1位运算&#34;&gt;#&lt;/a&gt; T1 位运算&lt;/h3&gt;
&lt;p&gt;题意：输入 a，b，输出 a&amp;amp;b,a|b,a^b 的二进制表示&lt;br&gt;
签到题，特判值为 0 的情况，没啥说的&lt;br&gt;
代码：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;using namespace std ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void deal ( int x ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if ( x == 0 ) &amp;#123; cout &amp;lt;&amp;lt; &amp;quot;0&amp;quot; &amp;lt;&amp;lt; endl ; return ; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int a[10000] , len = 1 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while ( x ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        a[len++] = x &amp;amp; 1 ; x &amp;gt;&amp;gt;= 1 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for ( int i = len - 1 ; i &amp;gt;= 1 ; i -- ) cout &amp;lt;&amp;lt; a[i] ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cout &amp;lt;&amp;lt; endl ; return ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main ( ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int a , b ; scanf ( &amp;quot;%d%d&amp;quot; , &amp;amp; a , &amp;amp; b ) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int ans1 = a &amp;amp; b , ans2 = a | b , ans3 = a ^ b ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    deal ( ans1 ) ; deal ( ans2 ) ; deal ( ans3 ) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return 0 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;t21931&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#t21931&#34;&gt;#&lt;/a&gt; T21931&lt;/h3&gt;
&lt;p&gt;题面：&lt;br&gt;
&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008i3skNly1gx9p89fa2vj30wl0fz7az.jpg&#34; alt=&#34;&#34;&gt;&lt;br&gt;
歌颂我们伟大的母校 90 周年的题目。&lt;br&gt;
一眼看不出来，先打表枚举找规律。大胆猜想最佳情况是把每一张劵平摊开，尽可能的覆盖到每一次买套餐，小心求证列几个数学公式就出来了，这题不难。关键是你要眼尖的看出如果不买饭那么就不花钱。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;using namespace std ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main ( ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int T ; scanf ( &amp;quot;%d&amp;quot; , &amp;amp; T ) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while ( T -- ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int n , m ; scanf ( &amp;quot;%d%d&amp;quot; , &amp;amp; n , &amp;amp; m ) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int a[1000] , tot = 0 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for ( int i = 1 ; i &amp;lt;= n ; i ++ ) scanf ( &amp;quot;%d&amp;quot; , &amp;amp; a[i] ) , tot += a[i] ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if ( m &amp;gt; n ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            cout &amp;lt;&amp;lt; tot * 2 * ( m - n ) + tot * n - tot &amp;lt;&amp;lt; endl ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        else if ( m == 0 ) cout &amp;lt;&amp;lt; &amp;quot;0&amp;quot; &amp;lt;&amp;lt; endl ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        else cout &amp;lt;&amp;lt; m * tot - tot &amp;lt;&amp;lt; endl ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return 0 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;t3等级展示&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#t3等级展示&#34;&gt;#&lt;/a&gt; T3 等级展示&lt;/h3&gt;
&lt;p&gt;题意：&lt;br&gt;
类比于 qq 的等级，对应星星、月亮、太阳、皇冠有 *,(,0,W 给出等级，输出图标&lt;br&gt;
签到题，简单的一批，直接上代码&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;using namespace std ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main ( ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int n ; scanf ( &amp;quot;%d&amp;quot; , &amp;amp; n ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for ( int i = 1 ; i &amp;lt;= n / 64 ; i ++ ) cout &amp;lt;&amp;lt; &amp;quot;W&amp;quot; ; n %= 64 ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for ( int i = 1 ; i &amp;lt;= n / 16 ; i ++ ) cout &amp;lt;&amp;lt; &amp;quot;O&amp;quot; ; n %= 16 ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for ( int i = 1 ; i &amp;lt;= n / 4 ; i ++ ) cout &amp;lt;&amp;lt; &amp;quot;(&amp;quot; ; n %= 4 ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for ( int i = 1 ; i &amp;lt;= n ; i ++ ) cout &amp;lt;&amp;lt; &amp;quot;*&amp;quot; ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return 0 ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;t4边权之和&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#t4边权之和&#34;&gt;#&lt;/a&gt; T4 边权之和&lt;/h3&gt;
&lt;p&gt;题意：n 个点的无向完全图，对于每个点有点权 ai，对于两个点 i，j 的边权为 | ai-aj|，统计边权之和对于 998244353 取模值&lt;br&gt;
考虑把绝对值去掉，先把数组给排序，计算它们的和，如何整体计算即可，也不难。&lt;br&gt;
至此，新生赛所有的送分题以及送完了，后面的题或多或少都有些难度，这四道题基本上是所有接触过 c 的人都能写出来的，只是快慢罢了。&lt;br&gt;
我新生赛来迟了 30min，我写到这道题时排位 30 多名，后面排名基本上是只升不降，说明大部分人开始卡住了。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;using namespace std ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const long long mod = 998244353 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;long long a[1000006] ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bool cmp ( int x , int y ) &amp;#123; return x &amp;gt; y ; &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main ( ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int n ; long long ans = 0 , tot = 0 ; scanf ( &amp;quot;%d&amp;quot; , &amp;amp; n ) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for ( int i = 1 ; i &amp;lt;= n ; i ++ ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scanf ( &amp;quot;%lld&amp;quot; , &amp;amp; a[i] ) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        tot += a[i] ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sort ( a + 1 , a + 1 + n , cmp ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for ( int i = 1 ; i &amp;lt;= n ; i ++ ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        tot -= a[i] ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ans += ( ( long long ) ( n - i ) ) * a[i] - tot ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ans %= mod ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cout &amp;lt;&amp;lt; ans ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return 0 ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;t5tsy的轻音梦&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#t5tsy的轻音梦&#34;&gt;#&lt;/a&gt; T5tsy 的轻音梦&lt;/h3&gt;
&lt;p&gt;（没想到在这都能见到轻音厨，但可惜的是这个轻音厨太坑了）&lt;br&gt;
题面：&lt;br&gt;
&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008i3skNly1gx9ppizm8sj30wt09btag.jpg&#34; alt=&#34;&#34;&gt;&lt;br&gt;
请大家先看看那位交了 48 次都没过的大佬：&lt;br&gt;
&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008i3skNly1gx9pqbexghj30nh0hiajq.jpg&#34; alt=&#34;&#34;&gt;&lt;br&gt;
怎么说呢，从第一天开始我就仰望大佬的英姿，虽然最后大佬跟我 A 的题是一个数，但就凭这道题我就不得不佩服他。我一度怀疑他在整活，但看到他在比赛终都没有 A 掉这题，不由得对他产生崇高的敬意。&lt;br&gt;
我开始也被绕进去了，很明显，我们可以联想到幻方，幻方似乎是斜着放，中间是最中间的数，然后呈现一定规律依次放入数，但是我们怎么类比推理都无法得出正确的解法，特别是输出 - 1 给我了很大的迷惑，是不是要考虑奇数次项的奇偶关系？是不是对称放？等等，然而这些都是放屁。想出来正解后我觉得自己是个傻逼。&lt;br&gt;
正解：对于奇数次项考虑对角线为分隔除了正中间的一定为偶其余的依次按从大到小的顺序从对角线依次填入，保证左边是偶右边是奇就行。&lt;br&gt;
对于偶数次项直接依次填入即可&lt;br&gt;
（ls 的轻音梦碎了）&lt;br&gt;
代码：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;using namespace std ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int a[1005][1005] ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main ( ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int n ; scanf ( &amp;quot;%d&amp;quot; , &amp;amp; n ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if ( n % 2 == 0 ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		for ( int i = 1 ; i &amp;lt;= n * n ; i ++ ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &amp;quot; &amp;quot; ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			if ( i % n == 0 ) cout &amp;lt;&amp;lt; endl ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	else if ( n == 1 ) cout &amp;lt;&amp;lt; &amp;quot;1&amp;quot; ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		for ( int i = 1 ; i &amp;lt;= n / 2 ; i ++ ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			a[i][i] = i * 2 ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			a[i][i+1] = i * 2 + 1 ; 	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		a[1][3] = 1 ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		a[n/2+1][n/2] = n + 1 ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		for ( int i = 1 ; i &amp;lt;= n / 2 + 1 ; i ++ ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			int x = n / 2 + i , y = n / 2 + i ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			a[x][y] = n + 1 + i * 2 - 1 ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			a[x+1][y] = n + 1 + i * 2 ;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int cur1 = n + 1 + ( n / 2 + 1 ) * 2 + 1 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int cur2 = cur1 - 1 ;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		for ( int i = 1 ; i &amp;lt;= n ; i ++ ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			for ( int j = 1 ; j &amp;lt;= n ; j ++ ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				if ( ! a[i][j] ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					if ( i &amp;gt; j ) a[i][j] = cur2 , cur2 += 2 ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					if ( j &amp;gt; i ) a[i][j] = cur1 , cur1 += 2 ; 	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				cout &amp;lt;&amp;lt; a[i][j] &amp;lt;&amp;lt; &amp;quot; &amp;quot; ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			cout &amp;lt;&amp;lt; endl ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return 0 ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;t6奇怪的排序&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#t6奇怪的排序&#34;&gt;#&lt;/a&gt; T6 奇怪的排序&lt;/h3&gt;
&lt;p&gt;题意：&lt;br&gt;
&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008i3skNly1gx9q4jdkkwj30ge0d475c.jpg&#34; alt=&#34;&#34;&gt;&lt;br&gt;
这题是很有意思的一道题，考察算法线段树和逆序对，只能说挺难想的吧，难度估计有提高组 D2T1 的难度。&lt;br&gt;
我们发现这个神奇的算法是把每个最大的数抬到第 i 个位置上并对前 i 个数排序，第 i+1 个数按照大小顺序交换到自己的位置上，交换的次数为这个数不重复的逆序对。&lt;br&gt;
本身分析到这里我以为套个逆序对就完了，结果发现是不重复的，然后我就弄了一个小暴力，把这些重复的数强制给删掉，结果时间复杂度为 O (n^2*logn) 比他原来的还大，emmm。&lt;br&gt;
对于常见的求逆序对的方法归并和树状数组我都不是很熟悉，于是我就用最无脑的线段树去做，依次判断这个数是否读入过然后决定是否加入到逆序对的计算，最后加起来就行。时间复杂度为 O (nlogn)&lt;br&gt;
 代码：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;queue&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;using namespace std ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;typedef long long LL ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const int maxn = 200005 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;struct L &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int val , add ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; t[maxn&amp;lt;&amp;lt;2] ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int n , m ; LL sum = 0 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;struct M &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int val , id ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; a[maxn] ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int vis[maxn] , arank[maxn] ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bool cmp ( M x , M y ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if ( x.val == y.val ) return x.id &amp;lt; y.id ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return x.val &amp;lt; y.val ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void spread ( int p , int l , int r ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if ( t[p].add ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int mid = ( l + r ) &amp;gt;&amp;gt; 1 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        t[p&amp;lt;&amp;lt;1].val = ( t[p&amp;lt;&amp;lt;1].val + t[p].add * ( mid - l + 1 ) ) , t[p&amp;lt;&amp;lt;1].add += t[p].add ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        t[p&amp;lt;&amp;lt;1|1].val = ( t[p&amp;lt;&amp;lt;1|1].val + t[p].add * ( r - mid ) ) , t[p&amp;lt;&amp;lt;1|1].add += t[p].add ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        t[p].add = 0 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void change ( int p , int l , int r , int x , int y , int z ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   if ( x &amp;lt;= l &amp;amp;&amp;amp; r &amp;lt;= y ) &amp;#123; t[p].val += z * ( r - l + 1 ) ; t[p].add += z ; return ; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   int mid = ( l + r ) &amp;gt;&amp;gt; 1 ; spread ( p , l , r ) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   if ( x &amp;lt;= mid ) change ( p &amp;lt;&amp;lt; 1 , l , mid , x , y , z ) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   if ( y &amp;gt; mid ) change ( p &amp;lt;&amp;lt; 1 | 1 , mid + 1 , r , x , y , z ) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   t[p].val = t[p&amp;lt;&amp;lt;1].val + t[p&amp;lt;&amp;lt;1|1].val ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int ask ( int p , int l , int r , int x , int y ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if ( x &amp;lt;= l &amp;amp;&amp;amp; r &amp;lt;= y ) &amp;#123; return t[p].val ; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int mid = ( l + r ) &amp;gt;&amp;gt; 1 ; spread ( p , l , r ) ; int ans = 0 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if ( x &amp;lt;= mid ) ans = ans + ask ( p &amp;lt;&amp;lt; 1 , l , mid , x , y ) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if ( y &amp;gt; mid ) ans = ans + ask ( p &amp;lt;&amp;lt; 1 | 1 , mid + 1 , r , x , y ) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return ans ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main ( ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    scanf ( &amp;quot;%d&amp;quot; , &amp;amp; n ) ; int maxn = 0 , site = 0 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for ( int i = 1 ; i &amp;lt;= n ; i ++ ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scanf ( &amp;quot;%d&amp;quot; , &amp;amp; a[i].val ) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if ( a[i].val &amp;gt; maxn ) maxn = a[i].val , site = i ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for ( int i = 1 ; i &amp;lt;= site ; i ++ ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if ( a[i].val &amp;gt; a[1].val ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            swap ( a[i].val , a[1].val ) ; sum += 1LL ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for ( int i = 1 ; i &amp;lt;= n ; i ++ ) a[i].id = i ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sort ( a + 1 , a + 1 + n , cmp ) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int cur = 2 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for ( int i = 1 ; i &amp;lt;= n ; i ++ ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if ( a[i].val == a[i-1].val ) cur -- ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        arank[a[i].id] = cur ++ ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for ( int i = 1 ; i &amp;lt;= n ; i ++ ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sum += ( LL ) ( ask ( 1 , 1 , n , arank[i] , arank[i] ) ) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if ( vis[arank[i]] ) continue ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        vis[arank[i]] ++ ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        change ( 1 , 1 , n , 1 , arank[i] - 1 , 1 ) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cout &amp;lt;&amp;lt; sum ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return 0 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;t7更高更妙的字符游戏&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#t7更高更妙的字符游戏&#34;&gt;#&lt;/a&gt; T7 更高更妙的字符游戏&lt;/h3&gt;
&lt;p&gt;题面：&lt;br&gt;
&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008i3skNly1gx9qg4e2lij30m607qjsl.jpg&#34; alt=&#34;&#34;&gt;&lt;br&gt;
对于我来说，博弈论分为两种，一种是简单的，一种是做不出来的。&lt;br&gt;
我在比赛中惊喜的发现居然有超过 5 个人做出来了这道题，我稍加思索，然后大胆假设，也没小心求证，直接交了然后就 A 了，www。&lt;br&gt;
考虑两种必死的情况，也就是之差一个的和不差的，直接判断就行。对于其它情况，我们从上帝视角来看，如果是我发现下一步我可能会输，我们直接把那个字符删了就行，但是万一删了还是必死呢。我们假设有 abcabc 这种情况，我们肯定不可能删 b，删了就死，但我们可以删最边上的 a 和 c 啊，那么最终的赢家只由字符串的大小决定&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;using namespace std ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main ( ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int T ; scanf ( &amp;quot;%d&amp;quot; , &amp;amp; T ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int flag = 2 ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while ( T -- ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        flag = 2 ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int n ; scanf ( &amp;quot;%d&amp;quot; , &amp;amp; n ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        char a[1000006] ; a[n+1] = 0 ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        scanf ( &amp;quot;%s&amp;quot; , a + 1 ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for ( int i = 1 ; i &amp;lt;= n - 1 ; i ++ ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if ( a[i] == a[i+1] ) flag = 0 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if ( a[i] == a[i+2] &amp;amp;&amp;amp; i + 2 &amp;lt;= n ) flag = min ( flag , 1 ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if ( flag == 0 ) cout &amp;lt;&amp;lt; &amp;quot;pllj&amp;quot; &amp;lt;&amp;lt; endl ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        else if ( flag == 1 ) cout &amp;lt;&amp;lt; &amp;quot;freesin&amp;quot; &amp;lt;&amp;lt; endl ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            flag = n % 2 ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if ( flag == 0 ) cout &amp;lt;&amp;lt; &amp;quot;pllj&amp;quot; &amp;lt;&amp;lt; endl ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            else if ( flag == 1 ) cout &amp;lt;&amp;lt; &amp;quot;freesin&amp;quot; &amp;lt;&amp;lt; endl ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return 0 ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;t8内存占用计算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#t8内存占用计算&#34;&gt;#&lt;/a&gt; T8 内存占用计算&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008i3skNly1gx9qmm6ve0j30hu0i240c.jpg&#34; alt=&#34;&#34;&gt;&lt;br&gt;
纯模拟，利用高精的思想去比较，乘法就先判断位数够不够如果正好就逐位比较，想了思路感觉很恶心没写代码，如果说错了还请谅解。&lt;/p&gt;
&lt;h3 id=&#34;t9tsy的排序&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#t9tsy的排序&#34;&gt;#&lt;/a&gt; T9tsy 的排序&lt;/h3&gt;
&lt;p&gt;题面：&lt;br&gt;
&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008i3skNly1gx9qpp37ttj30qg06z0u0.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;三年 oi 一场空，不开 long long 见祖宗&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;每个数只出现一次，我们可以计算它们的逆序对，然后就可以算出它们的正序对等等数据，所以我们只需枚举中间两位，答案就是对于每个逆序对，求两个数左边比他们小的和右边比它们大的数的积。&lt;br&gt;
但这个算法的复杂度还是 O (n^2)，我们把每个数从大到小丢入线段树中，把标号大于它本身的数都加上它的正序对的个数，强制强制把时间复杂度压缩到 O (nlogn)，再一次性乘起来就行。&lt;br&gt;
注意一定要开 longlong&lt;/p&gt;
&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; std ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; LL ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; maxn = &lt;span class=&#34;number&#34;&gt;300005&lt;/span&gt; ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; mod = &lt;span class=&#34;number&#34;&gt;35198030&lt;/span&gt; ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;L&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    LL add , val ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; t[maxn&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a[maxn] ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;M&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; val , id ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; f[maxn] ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LL g[maxn] ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;spread&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;( &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; p , &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; l , &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; r )&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( t[p].add ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; mid = ( l + r ) &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        t[p&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].val = ( t[p&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].val + t[p].add * ( mid - l + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; ) ) % mod , t[p&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].add += t[p].add ; t[p&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].add %= mod ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        t[p&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;|&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].val = ( t[p&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;|&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].val + t[p].add * ( r - mid ) ) % mod , t[p&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;|&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].add += t[p].add ; t[p&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;|&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].add %= mod ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        t[p].add = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;change&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;( &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; p , &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; l , &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; r , &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; x , &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; y , LL z )&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( x &amp;lt;= l &amp;amp;&amp;amp; r &amp;lt;= y ) &amp;#123; t[p].val += z * ( r - l + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; ) ; t[p].add += z ; t[p].val %= mod , t[p].add %= mod ; &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; mid = ( l + r ) &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; ; &lt;span class=&#34;built_in&#34;&gt;spread&lt;/span&gt; ( p , l , r ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( x &amp;lt;= mid ) &lt;span class=&#34;built_in&#34;&gt;change&lt;/span&gt; ( p &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; , l , mid , x , y , z ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( y &amp;gt; mid ) &lt;span class=&#34;built_in&#34;&gt;change&lt;/span&gt; ( p &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; , mid + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; , r , x , y , z ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   t[p].val = ( t[p&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].val + t[p&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;|&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].val ) % mod ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;LL &lt;span class=&#34;title&#34;&gt;ask&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;( &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; p , &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; l , &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; r , &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; x , &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; y )&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( x &amp;lt;= l &amp;amp;&amp;amp; r &amp;lt;= y ) &amp;#123; &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; t[p].val % mod ; &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; mid = ( l + r ) &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; ; &lt;span class=&#34;built_in&#34;&gt;spread&lt;/span&gt; ( p , l , r ) ; LL ans = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( x &amp;lt;= mid ) ans = ( ans + &lt;span class=&#34;built_in&#34;&gt;ask&lt;/span&gt; ( p &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; , l , mid , x , y ) ) % mod ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( y &amp;gt; mid ) ans = ( ans + &lt;span class=&#34;built_in&#34;&gt;ask&lt;/span&gt; ( p &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; , mid + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; , r , x , y ) ) % mod ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ans ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;( )&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; n ; &lt;span class=&#34;built_in&#34;&gt;scanf&lt;/span&gt; ( &lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt; , &amp;amp; n ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; ; i &amp;lt;= n ; i ++ ) &lt;span class=&#34;built_in&#34;&gt;scanf&lt;/span&gt; ( &lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt; , &amp;amp; a[i] ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; ; i &amp;lt;= n ; i ++ ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        f[a[i]].val = &lt;span class=&#34;built_in&#34;&gt;ask&lt;/span&gt; ( &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; , &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; , n , a[i] , a[i] ) ; f[a[i]].id = i ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;change&lt;/span&gt; ( &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; , &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; , n , a[i] , n , &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ; i &amp;lt;= ( n &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; ) ; i ++ ) t[i].add = t[i].val = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i = n ; i &amp;gt;= &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; ; i -- ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; ind = f[i].id ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        g[i] = ( &lt;span class=&#34;built_in&#34;&gt;ask&lt;/span&gt; ( &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; , &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; , n , ind , ind ) ) % mod ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;change&lt;/span&gt; ( &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; , &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; , n , ind , n , f[i].val ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    LL ans = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; ; i &amp;lt;= n ; i ++ ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        LL num = ( ( n - a[i] ) - ( i - f[a[i]].val - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; ) ) % mod ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ans = ( ans + ( num * g[a[i]] ) ) % mod ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cout &amp;lt;&amp;lt; ans ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;t10璀璨星空&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#t10璀璨星空&#34;&gt;#&lt;/a&gt; T10 璀璨星空&lt;/h3&gt;
&lt;p&gt;题意：&lt;br&gt;
&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008i3skNly1gx9qz63046j30fy0fq3zm.jpg&#34; alt=&#34;&#34;&gt;&lt;br&gt;
没去做，也没有想，全场也只有六个做出来了，后面如果它们发题解再补吧。（还得补高数欠下的）&lt;/p&gt;
&lt;h3 id=&#34;t11复杂度理论初步&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#t11复杂度理论初步&#34;&gt;#&lt;/a&gt; T11 复杂度理论初步&lt;/h3&gt;
&lt;p&gt;题意：&lt;br&gt;
&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008i3skNly1gx9r210kolj30g60g5q3j.jpg&#34; alt=&#34;&#34;&gt;&lt;br&gt;
&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008i3skNly1gx9r29droxj30hm0guaas.jpg&#34; alt=&#34;&#34;&gt;&lt;br&gt;
&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008i3skNly1gx9r2gd287j30gl0aeq35.jpg&#34; alt=&#34;&#34;&gt;&lt;br&gt;
&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008i3skNly1gx9r2nnny9j30fu0dnmxw.jpg&#34; alt=&#34;&#34;&gt;&lt;br&gt;
提交了几次没对就没提交了。有几个结论还是可以记下来：对于 for 循环的时间复杂度就是最内层之积，对于递归就是递归的次数 * 每次递归的时间复杂度。同样的，有题解再做吧。&lt;/p&gt;
</content>
        <category term="题解" />
        <updated>2021-12-11T02:19:40.000Z</updated>
    </entry>
</feed>
