<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://Amentiraz.github.io</id>
    <title>Amentiraz • Posts by &#34;matlab&#34; tag</title>
    <link href="http://Amentiraz.github.io" />
    <updated>2021-09-22T10:35:13.000Z</updated>
    <category term="DP" />
    <category term="算法" />
    <category term="Dijkstra" />
    <category term="书评" />
    <category term="LCA" />
    <category term="数学建模" />
    <category term="TOPSIS" />
    <category term="Matlab" />
    <category term="代码" />
    <category term="分布式" />
    <category term="Tarjan" />
    <category term="学习笔记" />
    <category term="C语言" />
    <category term="复习资料" />
    <category term="python" />
    <category term="读书笔记" />
    <category term="生活" />
    <category term="杂" />
    <category term="层次分析法" />
    <category term="诗" />
    <category term="指针" />
    <category term="c语言" />
    <category term="论文" />
    <category term="笔记" />
    <category term="插值算法" />
    <category term="线段树" />
    <category term="结构" />
    <category term="题解" />
    <entry>
        <id>http://amentiraz.github.io/2021/09/22/TOPSIS-MATLAB/</id>
        <title>TOPSIS-MATLAB</title>
        <link rel="alternate" href="http://amentiraz.github.io/2021/09/22/TOPSIS-MATLAB/"/>
        <content type="html">&lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;script class=&#34;meting-secondary-script-marker&#34; src=&#34;\assets\js\Meting.min.js&#34;&gt;&lt;/script&gt;
    &lt;div id=&#34;aplayer-NKUgVpPc&#34; class=&#34;aplayer aplayer-tag-marker meting-tag-marker&#34;
         data-id=&#34;1401456829&#34; data-server=&#34;netease&#34; data-type=&#34;song&#34; data-mode=&#34;circulation&#34; data-autoplay=&#34;true&#34; data-mutex=&#34;true&#34; data-listmaxheight=&#34;340px&#34; data-preload=&#34;none&#34; data-theme=&#34;#ad7a86&#34;
    &gt;&lt;/div&gt;
&lt;p&gt;代码如下&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h3 id=&#34;主函数代码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#主函数代码&#34;&gt;#&lt;/a&gt; 主函数代码&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;clear;clc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;load data_water_quality.mat&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//正向化&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[n,m] = size ( X ) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;disp ( [&amp;#x27;共有&amp;#x27;num2str ( n ) &amp;#x27;个评价对象,&amp;#x27;num2str ( m ) &amp;#x27;个评价指标] ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Judge = input ([&amp;#x27;这&amp;#x27;num2str(m)&amp;#x27;个指标是否需要经过正向化处理，需要输入1，不需要输入0:&amp;#x27;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if Judge == 1 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Position = input (&amp;#x27;请输入需要正向化处理的指标所在的列，例如第2、3、6三列需要处理，那么你需要输入[2,3,6]:&amp;#x27;) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    disp ( &amp;#x27;请输入需要处理的这些列的指标类型（1:极小型，2:中间型，3:区间型）&amp;#x27;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Type = input (&amp;#x27;例如2极小，3区间，6中间就输入[1,3,2]:&amp;#x27; ) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for i = 1 : size ( Position , 2 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    X ( : , Position ( i ) ) = Positivization ( X ( : , Position ( i )  ) , Type ( i ) , Position ( i ) ) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //Positization是我们定义的函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    end&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    disp (&amp;#x27;正向化后的举证X=&amp;#x27; ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    disp ( X ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//对正向化对举证进行标准化&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Z = X ./ repmat ( sum ( X .* X ) .^ 0.5 , n , 1 ) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;disp ( &amp;#x27;标准化矩阵Z=&amp;#x27; ） &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;disp (Z) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//计算最大值与最小值的距离，并算出得分&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;D_P = sum ( [Z - repmat ( max ( Z ) , n , 1 ) .^ 2 ] , 2 ) .^ 0.5 ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;D_N = sum ( [Z - repmat ( min ( Z ) , n , 1 ) .^ 2 ] , 2 ) .^ 0.5 ;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;S = D_N ./ ( D_P + D_N ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;disp ( &amp;#x27;最后的得分为：&amp;#x27; ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stand_S = S / sum ( S ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[sorted_S , index] = sort ( stand_S , &amp;#x27;descend&amp;#x27; ) &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;positivization函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#positivization函数&#34;&gt;#&lt;/a&gt; Positivization 函数&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function [ posit_x ] = Positivization ( x , type , i ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if type == 1 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    disp([&amp;#x27;第&amp;#x27;num2str ( i ) &amp;#x27;列是极小型，正在正向化&amp;#x27;]) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    posit_x = Min2Max ( x ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    disp([&amp;#x27;第&amp;#x27;num2str ( i ) &amp;#x27;列正向化处理完成])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    disp(&amp;#x27;~~~~~~~~~~~~~~~~~~~~~分界线~~~~~~~~~~~~~~~~~~~~~~~~&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    else if type == 2 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dis ( [&amp;#x27;第&amp;#x27;num2str ( i ) &amp;#x27;列是中间型&amp;#x27;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    best = input (&amp;#x27;请输入最佳的那一个值:&amp;#x27;) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    posit_x = Mid2Max ( x , best ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    disp([&amp;#x27;第&amp;#x27;num2str ( i ) &amp;#x27;列正向化处理完成]) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    disp(&amp;#x27;~~~~~~~~~~~~~~~~~~~~~分界线~~~~~~~~~~~~~~~~~~~~~~~~&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    else if type == 3                                          &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dis ( [&amp;#x27;第&amp;#x27;num2str ( i ) &amp;#x27;列是区间型&amp;#x27;])                    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a = input (&amp;#x27;请输入区间的下界&amp;#x27;) ;                   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b = input (&amp;#x27;请输入区间的上界&amp;#x27;) ;         &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    posit_x = Inter2Max ( x , a , b ) ;                           &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    disp([&amp;#x27;第&amp;#x27;num2str ( i ) &amp;#x27;列正向化处理完成]) ;              &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    disp(&amp;#x27;~~~~~~~~~~~~~~~~~~~~~分界线~~~~~~~~~~~~~~~~~~~~~~~~&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    else &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    disp (&amp;#x27;没有这种类型的指标请检查Type向量中是否有除了1、2、3以外的其他值&amp;#x27;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    end&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;min2maxx函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#min2maxx函数&#34;&gt;#&lt;/a&gt; Min2Max (x) 函数&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function [ posit_x ] = Min2Max ( x ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    posit_x = max ( x ) - x ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;mid2maxxbest函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mid2maxxbest函数&#34;&gt;#&lt;/a&gt; Mid2Max (x,best) 函数&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function [ posit_x ] = Mid2Max ( x , best )  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    M = max ( abs ( x - best ) ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    posit_x = 1 - abs ( x - best ) / M ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;inter2maxxab函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#inter2maxxab函数&#34;&gt;#&lt;/a&gt; Inter2Max (x,a,b) 函数&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function [ posit_x ] = Inter2Max ( x , a , b ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    M = max ([ a - min ( x ) , max ( x ) - b ] ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r_x = size ( x , 1 ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    posit_x = zeros ( r_x , 1 ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for i = 1 : r_x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if x(i) &amp;lt; a &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            posit_x(i) = 1 - ( a - x(i) ) / M ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        else if x(i) &amp;gt; b &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            posit_x(i) = 1 - ( x(i) - b ) / M ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        else posit_x(i) = 1 ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        end&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    end&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;原始矩阵正向化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#原始矩阵正向化&#34;&gt;#&lt;/a&gt; 原始矩阵正向化&lt;/h3&gt;
&lt;p&gt;将 Excel 内的数据直接粘贴进 matlab 里，赋值给变量&lt;br&gt;
将此变量另存为至与代码相同的目录下&lt;br&gt;
调用直接用 load xxx.mat&lt;/p&gt;
&lt;h3 id=&#34;sort函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sort函数&#34;&gt;#&lt;/a&gt; sort 函数&lt;/h3&gt;
&lt;p&gt;sort (A) 若 A 是向量不管是列还是行向量，默认都是对 A 进行升序排序，sort (A) 是默认的升序，而 sort (A,‘descend’) 是降序&lt;br&gt;
若 A 是矩阵，默认对 A 的割裂进行升序排列&lt;br&gt;
 sort (A , dim) ;&lt;br&gt;
dim = 1 时 等效于 sort (A) ;&lt;br&gt;
dim = 2 时 表示对 A 的各列进行升序排列&lt;br&gt;
若欲爆裂排列前的索引，则可用 [sA,index] = sort ( A , ‘decend’ ) ;&lt;br&gt;
A = [ 2 , 1 , 3 , 8 ]&lt;br&gt;
sA = [ 8 , 3 , 2 , 1 ]&lt;br&gt;
index = [ 4 , 3 , 1 , 2 ]&lt;/p&gt;
&lt;h3 id=&#34;定义函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定义函数&#34;&gt;#&lt;/a&gt; 定义函数&lt;/h3&gt;
&lt;p&gt;function [输出变量] = 函数名称（输入变量）&lt;br&gt;
函数的中间部分都是函数体&lt;br&gt;
函数的最后要用 end 结尾&lt;br&gt;
输出变量和输入变量可以有多个，用逗号隔开&lt;br&gt;
例如：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function [ a , b , c ] = test ( d , e , f ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = d + e ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = e + f ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c = f + d ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zeros-ones函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zeros-ones函数&#34;&gt;#&lt;/a&gt; zeros, ones 函数&lt;/h3&gt;
&lt;p&gt;zeros ( 3 ) ;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ans = &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0 0 0 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0 0 0 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0 0 0 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;zeros ( 3 , 1 ) ;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ans = &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;ones 同理&lt;/p&gt;
</content>
        <category term="数学建模" />
        <category term="TOPSIS" />
        <category term="Matlab" />
        <updated>2021-09-22T10:35:13.000Z</updated>
    </entry>
</feed>
