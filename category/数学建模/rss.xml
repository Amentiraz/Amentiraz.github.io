<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Amentiraz • Posts by &#34;数学建模&#34; category</title>
        <link>http://Amentiraz.github.io</link>
        <description></description>
        <language>en</language>
        <pubDate>Sun, 03 Oct 2021 16:21:52 +0800</pubDate>
        <lastBuildDate>Sun, 03 Oct 2021 16:21:52 +0800</lastBuildDate>
        <category>DP</category>
        <category>算法</category>
        <category>Dijkstra</category>
        <category>书评</category>
        <category>LCA</category>
        <category>代码</category>
        <category>分布式</category>
        <category>数学建模</category>
        <category>TOPSIS</category>
        <category>Matlab</category>
        <category>Tarjan</category>
        <category>学习笔记</category>
        <category>C语言</category>
        <category>复习资料</category>
        <category>python</category>
        <category>论文</category>
        <category>笔记</category>
        <category>生活</category>
        <category>读书笔记</category>
        <category>杂</category>
        <category>层次分析法</category>
        <category>诗</category>
        <category>指针</category>
        <category>c语言</category>
        <category>插值算法</category>
        <category>线段树</category>
        <category>结构</category>
        <category>题解</category>
        <item>
            <guid isPermalink="true">http://amentiraz.github.io/2021/10/03/%E6%8F%92%E5%80%BC%E7%AE%97%E6%B3%95/</guid>
            <title>插值算法</title>
            <link>http://amentiraz.github.io/2021/10/03/%E6%8F%92%E5%80%BC%E7%AE%97%E6%B3%95/</link>
            <category>数学建模</category>
            <category>插值算法</category>
            <pubDate>Sun, 03 Oct 2021 16:21:52 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;script class=&#34;meting-secondary-script-marker&#34; src=&#34;\assets\js\Meting.min.js&#34;&gt;&lt;/script&gt;
    &lt;div id=&#34;aplayer-QgJsulsd&#34; class=&#34;aplayer aplayer-tag-marker meting-tag-marker&#34;
         data-id=&#34;502455381&#34; data-server=&#34;netease&#34; data-type=&#34;song&#34; data-mode=&#34;circulation&#34; data-autoplay=&#34;true&#34; data-mutex=&#34;true&#34; data-listmaxheight=&#34;340px&#34; data-preload=&#34;none&#34; data-theme=&#34;#ad7a86&#34;
    &gt;&lt;/div&gt;
&lt;p&gt;插值算法主要运用于在数学建模竞赛中，现有的数据极少，不足以支撑分析的进行，这时候就需要使用一些数学的方法&lt;br&gt;
插值的作用，“模拟产生” 一些新的但又比较靠谱的值来满足需求&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h3 id=&#34;一维插值问题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一维插值问题&#34;&gt;#&lt;/a&gt; 一维插值问题&lt;/h3&gt;
&lt;h4 id=&#34;问题如下&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#问题如下&#34;&gt;#&lt;/a&gt; 问题如下：&lt;/h4&gt;
&lt;p&gt;已经有 n+1 个节点 (xi,yi)(i=0,1,…,n), 其中 xi 互不相同，不妨设 a &amp;lt;= x0 &amp;lt; x1 &amp;lt; … &amp;lt; xn &amp;lt;= b , 求任一插值点 x * （不等于 xi）处的插值 y *&lt;br&gt;
 思路：构造 y=f (x), 使得 f (x) 过所有节点，即可得到 y *&lt;/p&gt;
&lt;h4 id=&#34;插值法的概念&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#插值法的概念&#34;&gt;#&lt;/a&gt; 插值法的概念&lt;/h4&gt;
&lt;p&gt;设函数 y=f (x) 在区间 [a,b] 上有定义，且已知在点 a&amp;lt;= x0 &amp;lt; x1 &amp;lt; … &amp;lt; xn &amp;lt;= b 上的值分别为 y0 , y1 , … , yn&lt;br&gt;
 若存在一简单函数 P (x) 使 P (xi) = yi ( i = 0 , 1 , 2 , … , n ) 则称 P (x) 为 f (x) 的插值函数，点 x0,x1,…,xn 称为插值节点，包含插值节点的区间 [a,b] 称为插值区间&lt;br&gt;
求插值函数 P (x) 的方法称为插值法&lt;br&gt;
插值法是不唯一的&lt;br&gt;
代数多项式：若 P (x) 是次数不超过 n 的代数多项式，即 P (x) = a0 + a1x + … + anx^n&lt;br&gt;
 分段插值：若 P (x) 为分段多项式，就称为分段插值&lt;br&gt;
三角插值：若 P (x) 为三角多项式，就称为三角插值（不予讨论）（一般要用到傅立叶变换等复杂的数学工具）&lt;br&gt;
一般来讲三角插值适用于对周期函数的插值（三角函数嘛）&lt;/p&gt;
&lt;h4 id=&#34;插值法原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#插值法原理&#34;&gt;#&lt;/a&gt; 插值法原理&lt;/h4&gt;
&lt;p&gt;定理：设有 n+1 个互不相同的节点 (xi,yi)(i=0,1,2,…,n) 则存在唯一的多项式：&lt;br&gt;
Ln (x) = a0 + a1x + … + anx^n   使得 Ln (xj) = yj (j=0,1,2,…n)&lt;br&gt;
 证 构造方程组&lt;br&gt;
「a0 + a1x0 + … + anx0^n = y0&lt;br&gt;
a0 + a1x1 + … + anx1^n = y1&lt;br&gt;
…&lt;br&gt;
a0 + a1xn + … + anxn^n = yn  」&lt;/p&gt;
&lt;p&gt;图片：&lt;/p&gt;
&lt;h4 id=&#34;拉格朗日插值法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#拉格朗日插值法&#34;&gt;#&lt;/a&gt; 拉格朗日插值法&lt;/h4&gt;
&lt;p&gt;在数值分析中，拉格朗日插值法是以法国十八世纪数学家约瑟夫・拉格朗日命名的一种多项式插值方法。如对实践中的某个物理量进行观测，在若干个不同的地方得到相应的观测值，拉格朗日插值法可以找到一个多项式，其恰好在各个观测的点取到观测到的值。这样的多项式称为拉格朗日（插值）多项式。&lt;br&gt;
对于两个点：(x0,y0) , (x1,y1)&lt;br&gt;
f(x) = ( x - x1 ) y0 / ( x0 - x1 ) + ( x - x0 ) y1 / ( x1 - x0 )&lt;br&gt;
 对于三个点：(x0,y0),(x1,y1),(x2,y2)&lt;br&gt;
f(x) = [ ( x - x1 ) ( x - x2 ) y0 ] / [ ( x0 - x1 ) ( x0 - x2 ) ]&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[ ( x - x0 ) ( x - x2 ) y1 ] / [ ( x1 - x0 ) ( x1 - x2 ) ]&lt;/li&gt;
&lt;li&gt;[ ( x - x0 ) ( x - x1 ) y2 ] / [ ( x2 - x0 ) ( x2 - x1 ) ]&lt;br&gt;
 我们可以归纳发现，这种式子如果取其中的一个 xi 取得的值必定是 yi，因为其它项为 0，对应的 xi 的 yi 的系数必定为 1&lt;br&gt;
&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008i3skNgy1gv3e0n9uf2j60mt09774y02.jpg&#34; alt=&#34;&#34;&gt;&lt;br&gt;
 然而我们实际情况中却不可能用拉格朗日插值法，他有很多问题&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;龙格现象&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#龙格现象&#34;&gt;#&lt;/a&gt; 龙格现象&lt;/h4&gt;
&lt;p&gt;图片 1:&lt;br&gt;
 图片 2:&lt;br&gt;
 这引出了两个问题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;插值多项式次数高，精度未必显著提高&lt;/li&gt;
&lt;li&gt;插值多项式次数越高，摄入误差可能显著增大&lt;br&gt;
我们可以得到，对于高次的多项式插值时，如果我们不确定曲线的类型，我们尽量不要使用&lt;br&gt;
那么如何提高插值精度呢&lt;br&gt;
采用分段线性插值&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;分段插值&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分段插值&#34;&gt;#&lt;/a&gt; 分段插值&lt;/h3&gt;
&lt;h4 id=&#34;分段线性插值&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分段线性插值&#34;&gt;#&lt;/a&gt; 分段线性插值&lt;/h4&gt;
&lt;p&gt;如果我们要在中间找一个值，我们找距离它最近的两点，两点之间连一条线段，直接在这条线段上找 x 对应的 y 值即可&lt;br&gt;
这种插值是十分简单的，也是不精准的&lt;/p&gt;
&lt;h4 id=&#34;分段二次插值&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分段二次插值&#34;&gt;#&lt;/a&gt; 分段二次插值&lt;/h4&gt;
&lt;p&gt;分段二次插值也是非常简单的，我们可以寻找距离这个插入点最近的三个点，三个点可以形成一个二次函数，同理可以直接取二次函数的值&lt;br&gt;
分段二次插值又称为分段抛物线插值&lt;/p&gt;
&lt;h4 id=&#34;牛顿插值法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#牛顿插值法&#34;&gt;#&lt;/a&gt; 牛顿插值法・&lt;/h4&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://amentiraz.github.io/2021/09/22/TOPSIS-MATLAB/</guid>
            <title>TOPSIS-MATLAB</title>
            <link>http://amentiraz.github.io/2021/09/22/TOPSIS-MATLAB/</link>
            <category>数学建模</category>
            <category>TOPSIS</category>
            <category>Matlab</category>
            <pubDate>Wed, 22 Sep 2021 18:35:13 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;script class=&#34;meting-secondary-script-marker&#34; src=&#34;\assets\js\Meting.min.js&#34;&gt;&lt;/script&gt;
    &lt;div id=&#34;aplayer-fBtQUjgF&#34; class=&#34;aplayer aplayer-tag-marker meting-tag-marker&#34;
         data-id=&#34;1401456829&#34; data-server=&#34;netease&#34; data-type=&#34;song&#34; data-mode=&#34;circulation&#34; data-autoplay=&#34;true&#34; data-mutex=&#34;true&#34; data-listmaxheight=&#34;340px&#34; data-preload=&#34;none&#34; data-theme=&#34;#ad7a86&#34;
    &gt;&lt;/div&gt;
&lt;p&gt;代码如下&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h3 id=&#34;主函数代码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#主函数代码&#34;&gt;#&lt;/a&gt; 主函数代码&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;clear;clc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;load data_water_quality.mat&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//正向化&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[n,m] = size ( X ) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;disp ( [&amp;#x27;共有&amp;#x27;num2str ( n ) &amp;#x27;个评价对象,&amp;#x27;num2str ( m ) &amp;#x27;个评价指标] ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Judge = input ([&amp;#x27;这&amp;#x27;num2str(m)&amp;#x27;个指标是否需要经过正向化处理，需要输入1，不需要输入0:&amp;#x27;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if Judge == 1 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Position = input (&amp;#x27;请输入需要正向化处理的指标所在的列，例如第2、3、6三列需要处理，那么你需要输入[2,3,6]:&amp;#x27;) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    disp ( &amp;#x27;请输入需要处理的这些列的指标类型（1:极小型，2:中间型，3:区间型）&amp;#x27;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Type = input (&amp;#x27;例如2极小，3区间，6中间就输入[1,3,2]:&amp;#x27; ) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for i = 1 : size ( Position , 2 ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    X ( : , Position ( i ) ) = Positivization ( X ( : , Position ( i )  ) , Type ( i ) , Position ( i ) ) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //Positization是我们定义的函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    end&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    disp (&amp;#x27;正向化后的举证X=&amp;#x27; ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    disp ( X ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//对正向化对举证进行标准化&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Z = X ./ repmat ( sum ( X .* X ) .^ 0.5 , n , 1 ) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;disp ( &amp;#x27;标准化矩阵Z=&amp;#x27; ） &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;disp (Z) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//计算最大值与最小值的距离，并算出得分&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;D_P = sum ( [Z - repmat ( max ( Z ) , n , 1 ) .^ 2 ] , 2 ) .^ 0.5 ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;D_N = sum ( [Z - repmat ( min ( Z ) , n , 1 ) .^ 2 ] , 2 ) .^ 0.5 ;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;S = D_N ./ ( D_P + D_N ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;disp ( &amp;#x27;最后的得分为：&amp;#x27; ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stand_S = S / sum ( S ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[sorted_S , index] = sort ( stand_S , &amp;#x27;descend&amp;#x27; ) &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;positivization函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#positivization函数&#34;&gt;#&lt;/a&gt; Positivization 函数&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function [ posit_x ] = Positivization ( x , type , i ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if type == 1 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    disp([&amp;#x27;第&amp;#x27;num2str ( i ) &amp;#x27;列是极小型，正在正向化&amp;#x27;]) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    posit_x = Min2Max ( x ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    disp([&amp;#x27;第&amp;#x27;num2str ( i ) &amp;#x27;列正向化处理完成])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    disp(&amp;#x27;~~~~~~~~~~~~~~~~~~~~~分界线~~~~~~~~~~~~~~~~~~~~~~~~&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    else if type == 2 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dis ( [&amp;#x27;第&amp;#x27;num2str ( i ) &amp;#x27;列是中间型&amp;#x27;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    best = input (&amp;#x27;请输入最佳的那一个值:&amp;#x27;) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    posit_x = Mid2Max ( x , best ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    disp([&amp;#x27;第&amp;#x27;num2str ( i ) &amp;#x27;列正向化处理完成]) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    disp(&amp;#x27;~~~~~~~~~~~~~~~~~~~~~分界线~~~~~~~~~~~~~~~~~~~~~~~~&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    else if type == 3                                          &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dis ( [&amp;#x27;第&amp;#x27;num2str ( i ) &amp;#x27;列是区间型&amp;#x27;])                    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a = input (&amp;#x27;请输入区间的下界&amp;#x27;) ;                   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b = input (&amp;#x27;请输入区间的上界&amp;#x27;) ;         &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    posit_x = Inter2Max ( x , a , b ) ;                           &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    disp([&amp;#x27;第&amp;#x27;num2str ( i ) &amp;#x27;列正向化处理完成]) ;              &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    disp(&amp;#x27;~~~~~~~~~~~~~~~~~~~~~分界线~~~~~~~~~~~~~~~~~~~~~~~~&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    else &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    disp (&amp;#x27;没有这种类型的指标请检查Type向量中是否有除了1、2、3以外的其他值&amp;#x27;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    end&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;min2maxx函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#min2maxx函数&#34;&gt;#&lt;/a&gt; Min2Max (x) 函数&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function [ posit_x ] = Min2Max ( x ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    posit_x = max ( x ) - x ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;mid2maxxbest函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mid2maxxbest函数&#34;&gt;#&lt;/a&gt; Mid2Max (x,best) 函数&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function [ posit_x ] = Mid2Max ( x , best )  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    M = max ( abs ( x - best ) ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    posit_x = 1 - abs ( x - best ) / M ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;inter2maxxab函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#inter2maxxab函数&#34;&gt;#&lt;/a&gt; Inter2Max (x,a,b) 函数&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function [ posit_x ] = Inter2Max ( x , a , b ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    M = max ([ a - min ( x ) , max ( x ) - b ] ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r_x = size ( x , 1 ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    posit_x = zeros ( r_x , 1 ) ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for i = 1 : r_x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if x(i) &amp;lt; a &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            posit_x(i) = 1 - ( a - x(i) ) / M ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        else if x(i) &amp;gt; b &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            posit_x(i) = 1 - ( x(i) - b ) / M ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        else posit_x(i) = 1 ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        end&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    end&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;原始矩阵正向化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#原始矩阵正向化&#34;&gt;#&lt;/a&gt; 原始矩阵正向化&lt;/h3&gt;
&lt;p&gt;将 Excel 内的数据直接粘贴进 matlab 里，赋值给变量&lt;br&gt;
将此变量另存为至与代码相同的目录下&lt;br&gt;
调用直接用 load xxx.mat&lt;/p&gt;
&lt;h3 id=&#34;sort函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sort函数&#34;&gt;#&lt;/a&gt; sort 函数&lt;/h3&gt;
&lt;p&gt;sort (A) 若 A 是向量不管是列还是行向量，默认都是对 A 进行升序排序，sort (A) 是默认的升序，而 sort (A,‘descend’) 是降序&lt;br&gt;
若 A 是矩阵，默认对 A 的割裂进行升序排列&lt;br&gt;
 sort (A , dim) ;&lt;br&gt;
dim = 1 时 等效于 sort (A) ;&lt;br&gt;
dim = 2 时 表示对 A 的各列进行升序排列&lt;br&gt;
若欲爆裂排列前的索引，则可用 [sA,index] = sort ( A , ‘decend’ ) ;&lt;br&gt;
A = [ 2 , 1 , 3 , 8 ]&lt;br&gt;
sA = [ 8 , 3 , 2 , 1 ]&lt;br&gt;
index = [ 4 , 3 , 1 , 2 ]&lt;/p&gt;
&lt;h3 id=&#34;定义函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定义函数&#34;&gt;#&lt;/a&gt; 定义函数&lt;/h3&gt;
&lt;p&gt;function [输出变量] = 函数名称（输入变量）&lt;br&gt;
函数的中间部分都是函数体&lt;br&gt;
函数的最后要用 end 结尾&lt;br&gt;
输出变量和输入变量可以有多个，用逗号隔开&lt;br&gt;
例如：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function [ a , b , c ] = test ( d , e , f ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = d + e ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = e + f ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c = f + d ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zeros-ones函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zeros-ones函数&#34;&gt;#&lt;/a&gt; zeros, ones 函数&lt;/h3&gt;
&lt;p&gt;zeros ( 3 ) ;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ans = &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0 0 0 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0 0 0 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0 0 0 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;zeros ( 3 , 1 ) ;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ans = &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;ones 同理&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://amentiraz.github.io/2021/09/22/TOPSIS%E6%B3%95/</guid>
            <title>TOPSIS法</title>
            <link>http://amentiraz.github.io/2021/09/22/TOPSIS%E6%B3%95/</link>
            <category>数学建模</category>
            <category>TOPSIS</category>
            <pubDate>Wed, 22 Sep 2021 14:32:59 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;script class=&#34;meting-secondary-script-marker&#34; src=&#34;\assets\js\Meting.min.js&#34;&gt;&lt;/script&gt;
    &lt;div id=&#34;aplayer-RlvmxlGi&#34; class=&#34;aplayer aplayer-tag-marker meting-tag-marker&#34;
         data-id=&#34;537854742&#34; data-server=&#34;netease&#34; data-type=&#34;song&#34; data-mode=&#34;circulation&#34; data-autoplay=&#34;true&#34; data-mutex=&#34;true&#34; data-listmaxheight=&#34;340px&#34; data-preload=&#34;none&#34; data-theme=&#34;#ad7a86&#34;
    &gt;&lt;/div&gt;
&lt;p&gt;TOPSIS 法 (Technique for Order Preference by Similarity to Ideal Solution)&lt;br&gt;
 可翻译为逼近理想解排序法，也称优劣解距离法&lt;br&gt;
 TOPSIS 法是一种常用的综合评价方法，其能充分利用原始数据的信息，其结果能精确的反映各评价方案之间的差距&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h3 id=&#34;层次分析法的局限性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#层次分析法的局限性&#34;&gt;#&lt;/a&gt; 层次分析法的局限性&lt;/h3&gt;
&lt;p&gt;1） 决策层不能太多，太多 n 会很大，潘多矩阵和一致矩阵差距大&lt;br&gt;
 2）对于已知的指标数据，我们如何利用数据使之更加准确&lt;/p&gt;
&lt;h3 id=&#34;一个例子&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一个例子&#34;&gt;#&lt;/a&gt; 一个例子&lt;/h3&gt;
&lt;p&gt;对于如下表格&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;姓名&lt;/th&gt;
&lt;th&gt;成绩&lt;/th&gt;
&lt;th&gt;排名&lt;/th&gt;
&lt;th&gt;修正后的排名&lt;/th&gt;
&lt;th&gt;评分&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;小明&lt;/td&gt;
&lt;td&gt;89&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;3/10=0.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;小王&lt;/td&gt;
&lt;td&gt;60&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1/10=0.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;小张&lt;/td&gt;
&lt;td&gt;74&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2/10=0.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;我&lt;/td&gt;
&lt;td&gt;99&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4/10=0.4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;对于这种评价系统我们可以发现，只要保证排名不变，那么评分就不会改变&lt;/p&gt;
&lt;h4 id=&#34;优化的想法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#优化的想法&#34;&gt;#&lt;/a&gt; 优化的想法&lt;/h4&gt;
&lt;p&gt;我们可以取最高的成绩 max = 99&lt;br&gt;
 最低的成绩 min = 60&lt;br&gt;
 构造计算评分的公式: (x - min) / ( max - min )&lt;br&gt;
 然后对于每一个数据进行归一化处理即可&lt;br&gt;
但同时最高分与最低分的评价是一定的，1&amp;amp;0&lt;/p&gt;
&lt;h4 id=&#34;说明&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#说明&#34;&gt;#&lt;/a&gt; 说明&lt;/h4&gt;
&lt;p&gt;为什么不直接将各自的分数除以 100 再进行归一化处理，这样对于数据的关联性还更强&lt;br&gt;
原因有三点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;比较对象一般远大于两个&lt;/li&gt;
&lt;li&gt;比较的指标往往不是一个方面的&lt;/li&gt;
&lt;li&gt;有很多指标不存在理论上的最大值和最小值，例如衡量经济增长水平的指标：GDP 增速&lt;br&gt;
故我们最好使用上述优化的想法&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;拓展问题增加指标个数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#拓展问题增加指标个数&#34;&gt;#&lt;/a&gt; 拓展问题：增加指标个数&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;姓名&lt;/th&gt;
&lt;th&gt;成绩&lt;/th&gt;
&lt;th&gt;与他人争吵的次数&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;小明&lt;/td&gt;
&lt;td&gt;89&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;小王&lt;/td&gt;
&lt;td&gt;60&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;小张&lt;/td&gt;
&lt;td&gt;74&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;清风&lt;/td&gt;
&lt;td&gt;99&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;成绩是越大越好，这样的指标称为极大型指标（效益型指标）&lt;br&gt;
与他人争吵的次数越少越好，这样的指标称为极小型指标（成本型指标）&lt;/p&gt;
&lt;p&gt;如果我们直接将这些数据加以利用显然是不合适的，因为指标类型不一样&lt;br&gt;
所以我们应当统一指标类型&lt;br&gt;
一般我们将所有的指标转化为极大型称为指标正向化（最常用）&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;姓名&lt;/th&gt;
&lt;th&gt;成绩&lt;/th&gt;
&lt;th&gt;与他人争吵的次数&lt;/th&gt;
&lt;th&gt;正向化后的争吵次数&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;小明&lt;/td&gt;
&lt;td&gt;89&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;小王&lt;/td&gt;
&lt;td&gt;60&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;小张&lt;/td&gt;
&lt;td&gt;74&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;清风&lt;/td&gt;
&lt;td&gt;99&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;极小型指标转换为极大型指标的公式：max - x&lt;/p&gt;
&lt;h4 id=&#34;标准化处理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#标准化处理&#34;&gt;#&lt;/a&gt; 标准化处理&lt;/h4&gt;
&lt;p&gt;显然成绩的大小与争吵次数的大小不是一个量级上的比较&lt;br&gt;
为了消去不同指标量纲的影响，需要对已经正向化的矩阵进行标准化处理&lt;br&gt;
图像链接：&lt;br&gt;
我们得到了标准化处理后的指标，那么我们怎么去联系这些值呢&lt;/p&gt;
&lt;h4 id=&#34;如何计算得分&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#如何计算得分&#34;&gt;#&lt;/a&gt; 如何计算得分&lt;/h4&gt;
&lt;p&gt;我们对于最开始的式子：(x - min) / ( max - min )&lt;br&gt;
 我们可以将其变形 = (x - min) / [ ( max - x ) + ( x - min ) ]&lt;br&gt;
 可以看作是：x 与最小值的距离 /  (x 与最大值的距离 + x 与最小值的距离)&lt;br&gt;
 类比可以得出：&lt;br&gt;
图像链接：&lt;/p&gt;
&lt;p&gt;上面的一大串公式可以这样理解，我们对于只有一个指标时，我们将这一列的数据找出它的最大值和最小值，对于多个指标，同理，我们先将每一列的最大值和最小值找出来。&lt;br&gt;
对于每一个评价对象，我们要找出它与最小值的距离可以看成一个平面直角坐标系，它的值所对应的点距离原点（最小值）的距离长度，也就是他的我们所要找的值&lt;br&gt;
对于最大值的寻找也同理&lt;/p&gt;
&lt;p&gt;计算出未归一化的得分后我们将其进行归一化处理，就可得到他们的排名了&lt;/p&gt;
&lt;p&gt;这下子再回到 TOPSIS 算法，我们就不难理解它为什么是优劣解距离法了吧&lt;/p&gt;
&lt;h3 id=&#34;梳理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#梳理&#34;&gt;#&lt;/a&gt; 梳理&lt;/h3&gt;
&lt;h4 id=&#34;第一步将原始矩阵正向化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第一步将原始矩阵正向化&#34;&gt;#&lt;/a&gt; 第一步将原始矩阵正向化&lt;/h4&gt;
&lt;p&gt;最常见的四种指标&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;指标&lt;/th&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;指标特点&lt;/th&gt;
&lt;th&gt;例子&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;极大型（效益型）&lt;/td&gt;
&lt;td&gt;指标越大越好&lt;/td&gt;
&lt;td&gt;成绩、GDP 增速、企业利润&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;极小型（成本型）&lt;/td&gt;
&lt;td&gt;指标越小越好&lt;/td&gt;
&lt;td&gt;费用、坏品率、污染程度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;中间型指标&lt;/td&gt;
&lt;td&gt;越接近某个值越好&lt;/td&gt;
&lt;td&gt;水质量评估 ph 值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;区间型指标&lt;/td&gt;
&lt;td&gt;落在某个区间最好&lt;/td&gt;
&lt;td&gt;体温、水中植物性营养物量&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;正向化就是将所有指标类型转化为极大型指标&lt;/p&gt;
&lt;p&gt;我们介绍了极小型转化为极大型，那么另外两种指标该如何转换呢&lt;/p&gt;
&lt;h5 id=&#34;中间型指标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#中间型指标&#34;&gt;#&lt;/a&gt; 中间型指标&lt;/h5&gt;
&lt;p&gt;{xi} 是一组中间型指标序列，且最佳的数值为 xbest，那么正向化的公式如下&lt;br&gt;
 M = max {| xi - xbest |} , xi’ = 1 - | xi - xbest | / M&lt;br&gt;
 我们可以画图去理解这个公式，也是利用距离去计算，思想大致与极小型相同&lt;/p&gt;
&lt;h5 id=&#34;区间型指标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#区间型指标&#34;&gt;#&lt;/a&gt; 区间型指标&lt;/h5&gt;
&lt;p&gt;我们设最佳区间为 [a,b]&lt;br&gt;
M = max { a - min { xi } , max { xi } - b }&lt;br&gt;
xi = 1 - ( a - x ) / M , x &amp;lt; a&lt;br&gt;
1                 , a &amp;lt;= x &amp;lt;= b&lt;br&gt;
1 - ( x - b ) / M , x &amp;gt; b&lt;br&gt;
 思路与中间型指标也是差不多的，画图也可以理解&lt;/p&gt;
&lt;h4 id=&#34;第二步正向化矩阵标准化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第二步正向化矩阵标准化&#34;&gt;#&lt;/a&gt; 第二步：正向化矩阵标准化&lt;/h4&gt;
&lt;h4 id=&#34;第三步归一化处理并排名&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第三步归一化处理并排名&#34;&gt;#&lt;/a&gt; 第三步：归一化处理并排名&lt;/h4&gt;
&lt;h3 id=&#34;带权重的topsis&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#带权重的topsis&#34;&gt;#&lt;/a&gt; 带权重的 TOPSIS&lt;/h3&gt;
&lt;p&gt;对于之前我们所用到的 TOPSIS 我们默认了指标之间的权重为 1 ，然而实际情况可能更为复杂&lt;br&gt;
有 n 个要评价的对象，m 个评价指标的标准化矩阵&lt;br&gt;
可以利用层次分析法给这 m 个评价指标确定权重，每个指标的权重加起来显然是为 1 的。&lt;br&gt;
我们在计算评价对象与最大值之间的距离是可以直接针对每个 j（即每个指标）乘以响应的权重 wj 再进行开方&lt;br&gt;
可能有人就要问了，那你这样加起来的距离显然是要小于之前的距离呀，会对得出正确的结论有影响吗&lt;br&gt;
其实是没有影响的&lt;br&gt;
我们可以理解为对于我们建立的直角坐标系对于某个轴进行了压缩，压缩后虽然大小改变了，但是并不影响我们得出正确的结论&lt;/p&gt;
&lt;p&gt;关于 TOPSIS 的代码见下一篇博客&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://amentiraz.github.io/2021/09/18/%E5%B1%82%E6%AC%A1%E5%88%86%E6%9E%90%E6%B3%95/</guid>
            <title>层次分析法</title>
            <link>http://amentiraz.github.io/2021/09/18/%E5%B1%82%E6%AC%A1%E5%88%86%E6%9E%90%E6%B3%95/</link>
            <category>数学建模</category>
            <category>层次分析法</category>
            <pubDate>Sat, 18 Sep 2021 15:40:58 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;script class=&#34;meting-secondary-script-marker&#34; src=&#34;\assets\js\Meting.min.js&#34;&gt;&lt;/script&gt;
    &lt;div id=&#34;aplayer-GIhMsmOy&#34; class=&#34;aplayer aplayer-tag-marker meting-tag-marker&#34;
         data-id=&#34;1447594669&#34; data-server=&#34;netease&#34; data-type=&#34;song&#34; data-mode=&#34;circulation&#34; data-autoplay=&#34;true&#34; data-mutex=&#34;true&#34; data-listmaxheight=&#34;340px&#34; data-preload=&#34;none&#34; data-theme=&#34;#ad7a86&#34;
    &gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;态度可以转变，生活却不可逆转。- 学层次分析法有感&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此文章用于记录我学习数学建模的十大模型中层次分析法的学习笔记与自己的理解，本文大多数是由清风老师的数学建模的指导归纳总结得到的，以备今后的数学建模。如果遇到了类似的题目可以尽快的找到相应的模型进行解决。&lt;br&gt;
如果本文能帮助到其他阅读到此文章的同志，我也是不胜荣幸。&lt;br&gt;
如果文章有所纰漏，也欢迎大家指出。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h3 id=&#34;用途解决评价性问题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#用途解决评价性问题&#34;&gt;#&lt;/a&gt; 用途：解决评价性问题&lt;/h3&gt;
&lt;p&gt;层次分析法主要用于解决评价性问题，比如问你，选择哪种方案最好，哪个人或事物更为优秀。&lt;br&gt;
需要注意的是，这种问题不包括已经给出具体数据的问题，更多的是比较模糊、较为主观的问题。你需要根据自己的生活经历，网络上搜集的评价资料和结合背景材料去得到相关的评价指标。&lt;br&gt;
值得注意的是，我们可以在例如知网等比较权威的网站上去查找相关的论文资料并加以引用，可以让你的文章显得更为专业且结合其他人的观点可以让你的文章更为全面。&lt;/p&gt;
&lt;h3 id=&#34;评判标准&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#评判标准&#34;&gt;#&lt;/a&gt; 评判标准&lt;/h3&gt;
&lt;p&gt;那么评价类问题怎么去评判呢，我们使用打分来解决，根据权重表格计算得分&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;指标与方案&lt;/th&gt;
&lt;th&gt;指标权重&lt;/th&gt;
&lt;th&gt;方案 1&lt;/th&gt;
&lt;th&gt;方案 2&lt;/th&gt;
&lt;th&gt;…&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;指标 1&lt;/td&gt;
&lt;td&gt;…&lt;/td&gt;
&lt;td&gt;…&lt;/td&gt;
&lt;td&gt;…&lt;/td&gt;
&lt;td&gt;…&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;指标 2&lt;/td&gt;
&lt;td&gt;…&lt;/td&gt;
&lt;td&gt;…&lt;/td&gt;
&lt;td&gt;…&lt;/td&gt;
&lt;td&gt;…&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;…&lt;/td&gt;
&lt;td&gt;…&lt;/td&gt;
&lt;td&gt;…&lt;/td&gt;
&lt;td&gt;…&lt;/td&gt;
&lt;td&gt;…&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;我们不妨定义 $a_{i j}&amp;amp; 表示为第 i 行第 j 列的元素&lt;br&gt;
显然针对每个因素所占的权重必定和为 1，指标权重的和为 1&lt;br&gt;
 即 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mrow&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;a_{1-n 1}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.638891em;vertical-align:-0.208331em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.301108em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mbin mtight&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.208331em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 之和为 1&lt;br&gt;
 对于每个指标 k, &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;a_{k 2-n}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.638891em;vertical-align:-0.208331em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3361079999999999em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.03148em;&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mbin mtight&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.208331em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 的和同样为 1.&lt;br&gt;
 而我们评判每个方案时，是不是就可以通过计算指标权重 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.66666em;vertical-align:-0.08333em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 方案对应指标的值。通过比较每个方案所对应的结果，我们就可以得知最佳的方案是什么了。&lt;/p&gt;
&lt;h3 id=&#34;重要程度表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#重要程度表&#34;&gt;#&lt;/a&gt; 重要程度表&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;标度&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;A 对于 B 同样重要&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;A 对于 B 稍微重要&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;A 对于 B 明显重要&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;A 对于 B 强烈重要&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;A 对于 B 极端重要&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2,4,6,8&lt;/td&gt;
&lt;td&gt;两个相邻判断的中值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;其中，1/3 表示 B 对于 A 稍微重要，以此类推&lt;/p&gt;
&lt;h3 id=&#34;制作判断指标权重的表格&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#制作判断指标权重的表格&#34;&gt;#&lt;/a&gt; 制作判断指标权重的表格&lt;/h3&gt;
&lt;p&gt;通过以上的重要程度表，我们可以根据专家（自己）的判断，制定一份这样的表格&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;指标&lt;/th&gt;
&lt;th&gt;景色&lt;/th&gt;
&lt;th&gt;花费&lt;/th&gt;
&lt;th&gt;居住&lt;/th&gt;
&lt;th&gt;饮食&lt;/th&gt;
&lt;th&gt;交通&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;景色&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1/2&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;花费&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;居住&lt;/td&gt;
&lt;td&gt;1/4&lt;/td&gt;
&lt;td&gt;1/7&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1/2&lt;/td&gt;
&lt;td&gt;1/3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;饮食&lt;/td&gt;
&lt;td&gt;1/3&lt;/td&gt;
&lt;td&gt;1/5&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;交通&lt;/td&gt;
&lt;td&gt;1/3&lt;/td&gt;
&lt;td&gt;1/5&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;j&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;a_{i j}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.716668em;vertical-align:-0.286108em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.311664em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.05724em;&#34;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.286108em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 表示与 j 指标相比，i 的重要程度&lt;br&gt;
&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;j&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;a_{i j}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.716668em;vertical-align:-0.286108em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.311664em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.05724em;&#34;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.286108em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &amp;gt;0 且 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;j&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;a_{i j}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.716668em;vertical-align:-0.286108em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.311664em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.05724em;&#34;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.286108em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  * &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;j&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;a_{j i}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.716668em;vertical-align:-0.286108em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.311664em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.05724em;&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.286108em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; = 1 称之为正互反矩阵。&lt;br&gt;
此矩阵为判断矩阵&lt;/p&gt;
&lt;h3 id=&#34;一致矩阵&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一致矩阵&#34;&gt;#&lt;/a&gt; 一致矩阵&lt;/h3&gt;
&lt;p&gt;由于 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;j&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;a_{i j}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.716668em;vertical-align:-0.286108em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.311664em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.05724em;&#34;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.286108em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; = i 的重要程度 /j 的重要程度&lt;br&gt;
我们可以知道 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;j&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;a_{i j}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.716668em;vertical-align:-0.286108em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.311664em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.05724em;&#34;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.286108em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; * &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;j&lt;/mi&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;a_{j k}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.716668em;vertical-align:-0.286108em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3361079999999999em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.05724em;&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.03148em;&#34;&gt;k&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.286108em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  = &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;a_{i k}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.58056em;vertical-align:-0.15em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.33610799999999996em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.03148em;&#34;&gt;k&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ，列出数学计算公式即可得到&lt;br&gt;
而满足上述关系的矩阵我们称之为一致矩阵&lt;br&gt;
一致矩阵有一个特点，各行或者各列之间成倍数关系，利用这个我们可以直接得出这个矩阵是不是一致矩阵&lt;/p&gt;
&lt;h3 id=&#34;最大特征值&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最大特征值&#34;&gt;#&lt;/a&gt; 最大特征值&lt;/h3&gt;
&lt;p&gt;由于本人大一，太菜，没有学过线性代数，我只能复制清风老师上课给的一个性质。&lt;br&gt;
这个最大特征值你可以不用了解它究竟是个啥，怎么去计算，matlab 上面有它的计算函数&lt;br&gt;
我们目前只需要知道对于特征值 λ：n 阶正互反矩阵 A 为一致矩阵时当且仅当最大特征值 λmax=n 否则 λmax 必定大于 n&lt;/p&gt;
&lt;h3 id=&#34;一致性检验&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一致性检验&#34;&gt;#&lt;/a&gt; 一致性检验&lt;/h3&gt;
&lt;p&gt;步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;计算一致性指标 CI = （ λmax - n ) / (n - 1)&lt;/li&gt;
&lt;li&gt;查找对应的平均随机一致性指标 RI&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;阶数&lt;/th&gt;
&lt;th&gt;RI&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;0.52&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;0.89&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;1.12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;1.26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;1.36&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;1.41&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;1.46&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;1.49&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;1.52&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;1.54&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;1.56&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;1.58&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;1.59&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;计算一致性比例 CR=CI/RI&lt;br&gt;
 如果 CR&amp;lt;0.1 则一致性检验可以接受，否则需要修正&lt;br&gt;
什么，你问我怎么去修正？你是专家，肯定你来修正啊。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;计算一致矩阵的权重&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#计算一致矩阵的权重&#34;&gt;#&lt;/a&gt; 计算一致矩阵的权重&lt;/h3&gt;
&lt;p&gt;直接对第一列进行归一化处理，因为第一列与其他列都是成比例的，直接对第一列进行归一化处理是等于其他列对&lt;br&gt;
归一化处理：&lt;br&gt;
比如说对于如下矩阵&lt;/p&gt;
&lt;p&gt;PD|A|B&lt;br&gt;
A|1|2&lt;br&gt;
B|1/2|1&lt;/p&gt;
&lt;p&gt;我们直接计算 A：1/（1+1/2） B：（1/2）/（1+1/2）即可&lt;/p&gt;
&lt;h3 id=&#34;计算判断矩阵的权重&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#计算判断矩阵的权重&#34;&gt;#&lt;/a&gt; 计算判断矩阵的权重&lt;/h3&gt;
&lt;p&gt;我们不妨先假设矩阵 A=&lt;br&gt;
a11 a12 … a1n&lt;br&gt;
a21 a22 … a2n&lt;br&gt;
… … … …&lt;br&gt;
an1 an2 … ann&lt;/p&gt;
&lt;h4 id=&#34;算术平均法求权重&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#算术平均法求权重&#34;&gt;#&lt;/a&gt; 算术平均法求权重&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;分别对每一列进行归一化处理&lt;/li&gt;
&lt;li&gt;把每一行的数据分别加起来&lt;/li&gt;
&lt;li&gt;把 2 得到的数据除以 n&lt;br&gt;
 这种方法称之为算术平均法求权重&lt;br&gt;
那么算术平均法求得得权重向量 wi&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
    </channel>
</rss>
